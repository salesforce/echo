dist nginx
  modules accept_failed beginners_guide chunked_encoding_from_backend configure configuring_https_servers contributing_changes control converting_rewrite_rules daemon_master_process_off debugging_log events example faq freebsd_tuning hash howto_build_on_win32 install license_copyright load_balancing nginx nginx_dtrace_pid_provider ngx_core_module ngx_http_access_module ngx_http_addition_module ngx_http_auth_basic_module ngx_http_auth_jwt_module ngx_http_auth_request_module ngx_http_autoindex_module ngx_http_browser_module ngx_http_charset_module ngx_http_core_module ngx_http_dav_module ngx_http_empty_gif_module ngx_http_f4f_module ngx_http_fastcgi_module ngx_http_flv_module ngx_http_geo_module ngx_http_geoip_module ngx_http_gunzip_module ngx_http_gzip_module ngx_http_gzip_static_module ngx_http_headers_module ngx_http_hls_module ngx_http_image_filter_module ngx_http_index_module ngx_http_limit_conn_module ngx_http_limit_req_module ngx_http_log_module ngx_http_map_module ngx_http_memcached_module ngx_http_mp4_module ngx_http_perl_module ngx_http_proxy_module ngx_http_random_index_module ngx_http_realip_module ngx_http_referer_module ngx_http_rewrite_module ngx_http_scgi_module ngx_http_secure_link_module ngx_http_session_log_module ngx_http_slice_module ngx_http_spdy_module ngx_http_split_clients_module ngx_http_ssi_module ngx_http_ssl_module ngx_http_status_module ngx_http_stub_status_module ngx_http_sub_module ngx_http_upstream_conf_module ngx_http_upstream_module ngx_http_userid_module ngx_http_uwsgi_module ngx_http_v2_module ngx_http_xslt_module ngx_mail_auth_http_module ngx_mail_core_module ngx_mail_imap_module ngx_mail_pop3_module ngx_mail_proxy_module ngx_mail_smtp_module ngx_mail_ssl_module ngx_stream_access_module ngx_stream_core_module ngx_stream_geo_module ngx_stream_geoip_module ngx_stream_limit_conn_module ngx_stream_map_module ngx_stream_proxy_module ngx_stream_return_module ngx_stream_split_clients_module ngx_stream_ssl_module ngx_stream_upstream_module request_processing server_names switches syntax sys_errlist syslog variables_in_config websocket welcome_nginx_facebook windows

module accept_failed
  section 18 652 name

module beginners_guide
  section 18 1416 name
  section 1416 3769 starting, stopping, and reloading configuration
  section 3769 4787 configuration fileâ€™s structure
  section 4787 8623 serving static content
  section 8623 12072 setting up a simple proxy server
  section 12072 13450 setting up fastcgi proxying

module chunked_encoding_from_backend
  section 18 872 name

module configure
  section 18 6374 name

module configuring_https_servers
  section 18 1734 name
  section 1734 3242 https server optimization
  section 3242 6776 ssl certificate chains
  section 6776 7608 a single http/https server
  section 7608 12121 name-based https servers
  section 8903 10236 an ssl certificate with several names
  section 10236 12121 server name indication
  section 12121 13435 compatibility

module contributing_changes
  section 18 78 name
  section 78 313 getting sources
  section 313 2523 formatting changes
  section 2523 3120 before submitting
  section 3120 3389 submitting changes
  section 3389 3525 license

module control
  section 18 899 name
  section 899 3111 changing configuration
  section 3111 3735 rotating log-files
  section 3735 7797 upgrading executable on the fly

module converting_rewrite_rules
  section 18 86 name
  section 86 1951 a redirect to a main site
  section 1951 2913 converting mongrel rules

module daemon_master_process_off
  section 18 929 name

module debugging_log
  section 18 1494 name
  section 1494 1787 debugging log for selected clients
  section 1787 2386 logging to a cyclic memory buffer

module events
  section 18 1642 name

module example
  section 18 4367 name

module faq
  section 18 325 name

module freebsd_tuning
  section 18 83 name
  section 83 302 syncache and syncookies
  section 302 1826 listen queues
  section 1826 1877 sockets and files
  section 1877 3863 socket buffers
  section 3863 7821 mbufs, mbuf clusters, etc.
  section 7821 7961 proxying
  section 7961 8042 finalizing connection
  section 8042 8099 i386 specific tuning
  section 8099 8189 minor optimizations

module hash
  section 18 1414 name

module howto_build_on_win32
  section 18 108 name
  section 108 755 prerequisites
  section 755 2146 build steps
  section 2146 2211 see also

module install
  section 18 146 name
  section 146 254 installation on linux
  section 254 661 installation on freebsd
  section 661 931 building from sources

module license_copyright
  section 18 729 name

module load_balancing
  section 18 85 name
  section 85 529 introduction
  section 529 1038 load balancing methods
  section 1038 2254 default load balancing configuration
  section 2254 3035 least connected load balancing
  section 3035 4178 session persistence
  section 4178 5402 weighted load balancing
  section 5402 6402 health checks
  section 6402 7533 further reading

module nginx
  section 18 62 name
  section 62 723 introduction
  section 723 1100 how-to
  section 1100 1181 development
  section 1181 5763 modules reference

module nginx_dtrace_pid_provider
  section 18 5038 name
  section 5038 5304 see also

module ngx_core_module
  section 17 71 name
  section 71 297 example configuration
  section 297 14231 directives
  section 316 770 accept_mutex
  section 770 1102 accept_mutex_delay
  section 1102 1297 daemon
  section 1297 2211 debug_connection
  section 2211 2606 debug_points
  section 2606 4173 error_log
  section 4173 5471 env
  section 5471 5653 events
  section 5653 5988 include
  section 5988 6217 load_module
  section 6217 6662 lock_file
  section 6662 6890 master_process
  section 6890 7341 multi_accept
  section 7341 8000 pcre_jit
  section 8000 8176 pid
  section 8176 8319 ssl_engine
  section 8319 9084 thread_pool
  section 9084 9759 timer_resolution
  section 9759 10020 use
  section 10020 10297 user
  section 10297 10710 worker_aio_requests
  section 10710 11291 worker_connections
  section 11291 12455 worker_cpu_affinity
  section 12455 12809 worker_priority
  section 12809 13390 worker_processes
  section 13390 13653 worker_rlimit_core
  section 13653 13925 worker_rlimit_nofile
  section 13925 14231 working_directory

module ngx_http_access_module
  aliases ngx_access
  section 17 484 name
  section 484 1060 example configuration
  section 1060 1847 directives
  section 1079 1464 allow
  section 1464 1847 deny

module ngx_http_addition_module
  aliases ngx_addition
  section 17 325 name
  section 325 471 example configuration
  section 471 1583 directives
  section 490 839 add_before_body
  section 839 1185 add_after_body
  section 1185 1583 addition_types

module ngx_http_auth_basic_module
  aliases ngx_auth_basic
  section 17 568 name
  section 568 723 example configuration
  section 723 2736 directives
  section 742 1288 auth_basic
  section 1288 2736 auth_basic_user_file

module ngx_http_auth_jwt_module
  aliases ngx_auth_jwt
  section 17 886 name
  section 886 1036 example configuration
  section 1036 2159 directives
  section 1055 1836 auth_jwt
  section 1836 2159 auth_jwt_key_file
  section 2159 3308 embedded variables
  section 2354 2413 $jwt_claim_aud
  section 2413 2465 $jwt_claim_email
  section 2465 2531 $jwt_claim_exp
  section 2531 2591 $jwt_claim_iat
  section 2591 2646 $jwt_claim_iss
  section 2646 2688 $jwt_claim_jti
  section 2688 2754 $jwt_claim_nbf
  section 2754 2929 $jwt_claim_sub
  section 2929 3001 $jwt_header_alg
  section 3001 3076 $jwt_header_cty
  section 3076 3159 $jwt_header_enc
  section 3159 3228 $jwt_header_kid
  section 3228 3308 $jwt_header_typ

module ngx_http_auth_request_module
  aliases ngx_auth_request
  section 17 1139 name
  section 1139 1446 example configuration
  section 1446 2121 directives
  section 1465 1759 auth_request
  section 1759 2121 auth_request_set

module ngx_http_autoindex_module
  aliases ngx_autoindex
  section 17 413 name
  section 413 502 example configuration
  section 502 2023 directives
  section 521 742 autoindex
  section 742 1091 autoindex_exact_size
  section 1091 1714 autoindex_format
  section 1714 2023 autoindex_localtime

module ngx_http_browser_module
  aliases ngx_browser
  section 17 618 name
  section 243 378 $modern_browser
  section 378 516 $ancient_browser
  section 516 618 $msie
  section 618 1322 example configuration
  section 1322 3117 directives
  section 1341 1731 ancient_browser
  section 1731 1966 ancient_browser_value
  section 1966 2885 modern_browser
  section 2885 3117 modern_browser_value

module ngx_http_charset_module
  aliases ngx_charset
  section 17 511 name
  section 511 653 example configuration
  section 653 4932 directives
  section 672 1997 charset
  section 1997 3165 charset_map
  section 3165 3831 charset_types
  section 3831 4593 override_charset
  section 4593 4932 source_charset

module ngx_http_core_module
  aliases ngx_core
  section 17 85 name
  section 85 61635 directives
  section 104 2526 aio
  section 2526 2950 aio_write
  section 2950 3955 alias
  section 3955 4335 chunked_transfer_encoding
  section 4335 4854 client_body_buffer_size
  section 4854 5579 client_body_in_file_only
  section 5579 5995 client_body_in_single_buffer
  section 5995 6627 client_body_temp_path
  section 6627 7109 client_body_timeout
  section 7109 7644 client_header_buffer_size
  section 7644 7986 client_header_timeout
  section 7986 8548 client_max_body_size
  section 8548 9036 connection_pool_size
  section 9036 9350 default_type
  section 9350 9968 directio
  section 9968 10344 directio_alignment
  section 10344 12529 disable_symlinks
  section 10729 10839 off
  section 10839 10939 on
  section 10939 11119 if_not_owner
  section 11119 12529 from=part
  section 12529 14284 error_page
  section 14284 14589 etag
  section 14589 14745 http
  section 14745 15418 if_modified_since
  section 15141 15228 off
  section 15228 15263 exact
  section 15263 15418 before
  section 15418 16014 ignore_invalid_headers
  section 16014 17245 internal
  section 17245 18082 keepalive_disable
  section 18082 18469 keepalive_requests
  section 18469 19144 keepalive_timeout
  section 19144 19900 large_client_header_buffers
  section 19900 20675 limit_except
  section 20675 21691 limit_rate
  section 21691 22171 limit_rate_after
  section 22171 23037 lingering_close
  section 23037 23451 lingering_time
  section 23451 24015 lingering_timeout
  section 24015 32683 listen
  section 32683 36827 location
  section 36827 37090 log_not_found
  section 37090 37343 log_subrequest
  section 37343 37795 max_ranges
  section 37795 38847 merge_slashes
  section 38847 39162 msie_padding
  section 39162 39416 msie_refresh
  section 39416 40673 open_file_cache
  section 40673 40941 open_file_cache_errors
  section 40941 41333 open_file_cache_min_uses
  section 41333 41590 open_file_cache_valid
  section 41590 41931 output_buffers
  section 41931 42298 port_in_redirect
  section 42298 42646 postpone_output
  section 42646 43214 read_ahead
  section 43214 43530 recursive_error_pages
  section 43530 43819 request_pool_size
  section 43819 44500 reset_timedout_connection
  section 44500 45793 resolver
  section 45793 46048 resolver_timeout
  section 46048 46759 root
  section 46759 47450 satisfy
  section 47450 47936 send_lowat
  section 47936 48356 send_timeout
  section 48356 49370 sendfile
  section 49370 49734 sendfile_max_chunk
  section 49734 50246 server
  section 50246 52980 server_name
  section 52980 53575 server_name_in_redirect
  section 53575 53955 server_names_hash_bucket_size
  section 53955 54242 server_names_hash_max_size
  section 54242 54850 server_tokens
  section 54850 55170 tcp_nodelay
  section 55170 55721 tcp_nopush
  section 55721 58770 try_files
  section 58770 59641 types
  section 59641 60064 types_hash_bucket_size
  section 60064 60381 types_hash_max_size
  section 60381 61018 underscores_in_headers
  section 61018 61294 variables_hash_bucket_size
  section 61294 61635 variables_hash_max_size
  section 61635 68089 embedded variables
  section 61952 62024 $arg_i<name>
  section 62024 62076 $args
  section 62076 62230 $binary_remote_addr
  section 62230 62429 $body_bytes_sent
  section 62429 62505 $bytes_sent
  section 62505 62573 $connection
  section 62573 62678 $connection_requests
  section 62678 62749 $content_length
  section 62749 62816 $content_type
  section 62816 62873 $cookie_i<name>
  section 62873 62970 $document_root
  section 62970 63016 $document_uri
  section 63016 63190 $host
  section 63190 63226 $hostname
  section 63226 63402 $http_i<name>
  section 63402 63502 $https
  section 63502 63600 $is_args
  section 63600 63701 $limit_rate
  section 63701 63795 $msec
  section 63795 63840 $nginx_version
  section 63840 63887 $pid
  section 63887 63983 $pipe
  section 63983 64227 $proxy_protocol_addr
  section 64227 64468 $proxy_protocol_port
  section 64468 64515 $query_string
  section 64515 64702 $realpath_root
  section 64702 64746 $remote_addr
  section 64746 64787 $remote_port
  section 64787 64865 $remote_user
  section 64865 64917 $request
  section 64917 65205 $request_body
  section 65205 65861 $request_body_file
  section 65861 65966 $request_completion
  section 65966 66102 $request_filename
  section 66102 66212 $request_id
  section 66212 66326 $request_length
  section 66326 66412 $request_method
  section 66412 66585 $request_time
  section 66585 66657 $request_uri
  section 66657 66729 $scheme
  section 66729 66911 $sent_http_i<name>
  section 66911 67167 $server_addr
  section 67167 67240 $server_name
  section 67240 67313 $server_port
  section 67313 67465 $server_protocol
  section 67465 67725 $status
  section 67725 67814 $time_iso8601
  section 67814 67894 $time_local
  section 67894 68089 $uri

module ngx_http_dav_module
  aliases ngx_dav
  section 17 516 name
  section 516 916 example configuration
  section 916 3322 directives
  section 935 1385 dav_access
  section 1385 2437 dav_methods
  section 2437 2783 create_full_put_path
  section 2783 3322 min_delete_depth

module ngx_http_empty_gif_module
  aliases ngx_empty_gif
  section 17 185 name
  section 185 278 example configuration
  section 278 408 directives
  section 297 408 empty_gif

module ngx_http_f4f_module
  aliases ngx_f4f
  section 17 699 name
  section 699 797 example configuration
  section 797 1170 directives
  section 816 923 f4f
  section 923 1170 f4f_buffer_size

module ngx_http_fastcgi_module
  aliases ngx_fastcgi
  section 17 188 name
  section 188 628 example configuration
  section 628 36337 directives
  section 647 1701 fastcgi_bind
  section 1701 2198 fastcgi_buffer_size
  section 2198 3462 fastcgi_buffering
  section 3462 3895 fastcgi_buffers
  section 3895 4570 fastcgi_busy_buffers_size
  section 4570 4980 fastcgi_cache
  section 4980 5559 fastcgi_cache_bypass
  section 5559 5813 fastcgi_cache_key
  section 5813 6454 fastcgi_cache_lock
  section 6454 6869 fastcgi_cache_lock_age
  section 6869 7326 fastcgi_cache_lock_timeout
  section 7326 7871 fastcgi_cache_methods
  section 7871 8131 fastcgi_cache_min_uses
  section 8131 12042 fastcgi_cache_path
  section 12042 13419 fastcgi_cache_purge
  section 13419 13802 fastcgi_cache_revalidate
  section 13802 14918 fastcgi_cache_use_stale
  section 14918 16808 fastcgi_cache_valid
  section 16808 17426 fastcgi_catch_stderr
  section 17426 17755 fastcgi_connect_timeout
  section 17755 18144 fastcgi_force_ranges
  section 18144 18636 fastcgi_hide_header
  section 18636 18984 fastcgi_ignore_client_abort
  section 18984 20103 fastcgi_ignore_headers
  section 20103 20807 fastcgi_index
  section 20807 21206 fastcgi_intercept_errors
  section 21206 21754 fastcgi_keep_conn
  section 21754 22387 fastcgi_limit_rate
  section 22387 23180 fastcgi_max_temp_file_size
  section 23180 25556 fastcgi_next_upstream
  section 23673 23817 error
  section 23817 23968 timeout
  section 23968 24045 invalid_header
  section 24045 24116 http_500
  section 24116 24187 http_503
  section 24187 24258 http_403
  section 24258 24329 http_404
  section 24329 24644 non_idempotent
  section 24644 25556 off
  section 25556 25913 fastcgi_next_upstream_timeout
  section 25913 26273 fastcgi_next_upstream_tries
  section 26273 26823 fastcgi_no_cache
  section 26823 28338 fastcgi_param
  section 28338 28900 fastcgi_pass
  section 28900 29144 fastcgi_pass_header
  section 29144 29480 fastcgi_pass_request_body
  section 29480 29836 fastcgi_pass_request_headers
  section 29836 30288 fastcgi_read_timeout
  section 30288 30968 fastcgi_request_buffering
  section 30968 31480 fastcgi_send_lowat
  section 31480 31930 fastcgi_send_timeout
  section 31930 32832 fastcgi_split_path_info
  section 32832 34502 fastcgi_store
  section 34502 34992 fastcgi_store_access
  section 34992 35565 fastcgi_temp_file_write_size
  section 35565 36337 fastcgi_temp_path
  section 36337 36805 parameters passed to a fastcgi server
  section 36805 37965 embedded variables
  section 36984 37775 $fastcgi_script_name
  section 37775 37965 $fastcgi_path_info

module ngx_http_flv_module
  aliases ngx_flv
  section 17 542 name
  section 542 629 example configuration
  section 629 753 directives
  section 648 753 flv

module ngx_http_geo_module
  aliases ngx_geo
  section 17 197 name
  section 197 428 example configuration
  section 428 3843 directives
  section 447 3843 geo
  section 1419 1482 delete
  section 1482 1809 default
  section 1809 1909 include
  section 1909 2271 proxy
  section 2271 2717 proxy_recursive
  section 2717 3843 ranges

module ngx_http_geoip_module
  aliases ngx_geoip
  section 17 620 name
  section 620 903 example configuration
  section 903 4564 directives
  section 922 1511 geoip_country
  section 1173 1273 $geoip_country_code
  section 1273 1379 $geoip_country_code3
  section 1379 1511 $geoip_country_name
  section 1511 3202 geoip_city
  section 1774 2058 $geoip_area_code
  section 2058 2164 $geoip_city_country_code
  section 2164 2275 $geoip_city_country_code3
  section 2275 2397 $geoip_city_country_name
  section 2397 2615 $geoip_dma_code
  section 2615 2655 $geoip_latitude
  section 2655 2697 $geoip_longitude
  section 2697 2862 $geoip_region
  section 2862 3048 $geoip_region_name
  section 3048 3138 $geoip_city
  section 3138 3202 $geoip_postal_code
  section 3202 3603 geoip_org
  section 3493 3603 $geoip_org
  section 3603 3964 geoip_proxy
  section 3964 4564 geoip_proxy_recursive

module ngx_http_gunzip_module
  aliases ngx_gunzip
  section 17 516 name
  section 516 622 example configuration
  section 622 1515 directives
  section 641 1131 gunzip
  section 1131 1515 gunzip_buffers

module ngx_http_gzip_module
  aliases ngx_gzip
  section 17 279 name
  section 279 565 example configuration
  section 565 5092 directives
  section 584 820 gzip
  section 820 1275 gzip_buffers
  section 1275 1545 gzip_comp_level
  section 1545 2079 gzip_disable
  section 2079 2391 gzip_min_length
  section 2391 2655 gzip_http_version
  section 2655 4327 gzip_proxied
  section 3284 3378 off
  section 3378 3509 expired
  section 3509 3649 no-cache
  section 3649 3789 no-store
  section 3789 3927 private
  section 3927 4046 no_last_modified
  section 4046 4147 no_etag
  section 4147 4245 auth
  section 4245 4327 any
  section 4327 4739 gzip_types
  section 4739 5092 gzip_vary
  section 5092 5272 embedded variables
  section 5131 5272 $gzip_ratio

module ngx_http_gzip_static_module
  aliases ngx_gzip_static
  section 17 388 name
  section 388 510 example configuration
  section 510 1436 directives
  section 529 1436 gzip_static

module ngx_http_headers_module
  aliases ngx_headers
  section 17 252 name
  section 252 489 example configuration
  section 489 3007 directives
  section 508 1180 add_header
  section 1180 3007 expires

module ngx_http_hls_module
  aliases ngx_hls
  section 17 1284 name
  section 1284 1850 example configuration
  section 1850 5659 directives
  section 1869 1972 hls
  section 1972 2256 hls_buffers
  section 2256 4598 hls_forward_args
  section 4598 4861 hls_fragment
  section 4861 5122 hls_mp4_buffer_size
  section 5122 5659 hls_mp4_max_buffer_size

module ngx_http_image_filter_module
  aliases ngx_image_filter
  section 17 507 name
  section 507 773 example configuration
  section 773 4777 directives
  section 792 2847 image_filter
  section 1282 1357 off
  section 1357 1517 test
  section 1517 1728 size
  section 1728 1988 rotate
  section 1988 2388 resize
  section 2388 2847 crop
  section 2847 3173 image_filter_buffer
  section 3173 3526 image_filter_interlace
  section 3526 3988 image_filter_jpeg_quality
  section 3988 4326 image_filter_sharpen
  section 4326 4777 image_filter_transparency

module ngx_http_index_module
  aliases ngx_index
  section 17 379 name
  section 379 488 example configuration
  section 488 1322 directives
  section 507 1322 index

module ngx_http_limit_conn_module
  aliases ngx_limit_conn
  section 17 446 name
  section 446 708 example configuration
  section 708 4408 directives
  section 727 2031 limit_conn
  section 2031 2406 limit_conn_log_level
  section 2406 2692 limit_conn_status
  section 2692 4026 limit_conn_zone
  section 4026 4408 limit_zone

module ngx_http_limit_req_module
  aliases ngx_limit_req
  section 17 362 name
  section 362 639 example configuration
  section 639 4827 directives
  section 658 2402 limit_req
  section 2402 2992 limit_req_log_level
  section 2992 3276 limit_req_status
  section 3276 4827 limit_req_zone

module ngx_http_log_module
  aliases ngx_log
  section 17 384 name
  section 384 713 example configuration
  section 713 7472 directives
  section 732 4055 access_log
  section 4055 6266 log_format
  section 4336 4401 $bytes_sent
  section 4401 4454 $connection
  section 4454 4558 $connection_requests
  section 4558 4656 $msec
  section 4656 4736 $pipe
  section 4736 4834 $request_length
  section 4834 5057 $request_time
  section 5057 5097 $status
  section 5097 5170 $time_iso8601
  section 5170 6266 $time_local
  section 6266 7472 open_log_file_cache
  section 6714 6864 max
  section 6864 7012 inactive
  section 7012 7185 min_uses
  section 7185 7324 valid
  section 7324 7472 off

module ngx_http_map_module
  aliases ngx_map
  section 17 199 name
  section 199 576 example configuration
  section 576 3780 directives
  section 595 3149 map
  section 1950 2158 default value
  section 2158 2494 hostnames
  section 2494 3149 include file
  section 3149 3505 map_hash_bucket_size
  section 3505 3780 map_hash_max_size

module ngx_http_memcached_module
  aliases ngx_memcached
  section 17 329 name
  section 329 657 example configuration
  section 657 7058 directives
  section 676 1744 memcached_bind
  section 1744 2116 memcached_buffer_size
  section 2116 2451 memcached_connect_timeout
  section 2451 2846 memcached_force_ranges
  section 2846 3243 memcached_gzip_flag
  section 3243 4845 memcached_next_upstream
  section 3633 3777 error
  section 3777 3928 timeout
  section 3928 4007 invalid_response
  section 4007 4071 not_found
  section 4071 4845 off
  section 4845 5206 memcached_next_upstream_timeout
  section 5206 5570 memcached_next_upstream_tries
  section 5570 6140 memcached_pass
  section 6140 6600 memcached_read_timeout
  section 6600 7058 memcached_send_timeout
  section 7058 7203 embedded variables
  section 7097 7203 $memcached_key

module ngx_http_mp4_module
  aliases ngx_mp4
  section 17 2915 name
  section 2915 3138 example configuration
  section 3138 5229 directives
  section 3157 3262 mp4
  section 3262 3507 mp4_buffer_size
  section 3507 4032 mp4_max_buffer_size
  section 4032 4811 mp4_limit_rate
  section 4811 5229 mp4_limit_rate_after

module ngx_http_perl_module
  aliases ngx_perl
  section 17 514 name
  section 514 1950 known issues
  section 1950 2905 example configuration
  section 2905 3688 directives
  section 2924 3121 perl
  section 3121 3258 perl_modules
  section 3258 3484 perl_require
  section 3484 3688 perl_set
  section 3688 3930 calling perl from ssi
  section 3930 8789 the $r request object methods
  section 3980 4036 $r->args
  section 4036 5093 $r->filename
  section 5093 5185 $r->allow_ranges
  section 5185 5275 $r->discard_request_body
  section 5275 5386 $r->header_in(field)
  section 5386 5893 $r->header_only
  section 5893 6114 c<$r->log_error(errno,
  section 6114 6186 $r->print(text, ...)
  section 6186 6485 $r->request_body
  section 6485 6721 $r->request_body_file
  section 6721 6800 $r->request_method
  section 6800 6867 $r->remote_addr
  section 6867 7519 $r->flush
  section 7519 8474 $r->status(code)
  section 8474 8565 $r->unescape(text)
  section 8565 8789 $r->uri

module ngx_http_proxy_module
  aliases ngx_proxy
  section 17 180 name
  section 180 386 example configuration
  section 386 49723 directives
  section 405 1451 proxy_bind
  section 1451 1944 proxy_buffer_size
  section 1944 3147 proxy_buffering
  section 3147 3576 proxy_buffers
  section 3576 4243 proxy_busy_buffers_size
  section 4243 4649 proxy_cache
  section 4649 5217 proxy_cache_bypass
  section 5217 5657 proxy_cache_convert_head
  section 5657 6082 proxy_cache_key
  section 6082 6715 proxy_cache_lock
  section 6715 7126 proxy_cache_lock_age
  section 7126 7577 proxy_cache_lock_timeout
  section 7577 8116 proxy_cache_methods
  section 8116 8372 proxy_cache_min_uses
  section 8372 12260 proxy_cache_path
  section 12260 13615 proxy_cache_purge
  section 13615 13994 proxy_cache_revalidate
  section 13994 15154 proxy_cache_use_stale
  section 15154 17026 proxy_cache_valid
  section 17026 17351 proxy_connect_timeout
  section 17351 19014 proxy_cookie_domain
  section 19014 20542 proxy_cookie_path
  section 20542 20927 proxy_force_ranges
  section 20927 21324 proxy_headers_hash_bucket_size
  section 21324 21716 proxy_headers_hash_max_size
  section 21716 22220 proxy_hide_header
  section 22220 22666 proxy_http_version
  section 22666 23010 proxy_ignore_client_abort
  section 23010 24125 proxy_ignore_headers
  section 24125 24513 proxy_intercept_errors
  section 24513 25142 proxy_limit_rate
  section 25142 25925 proxy_max_temp_file_size
  section 25925 26202 proxy_method
  section 26202 28794 proxy_next_upstream
  section 26743 26887 error
  section 26887 27038 timeout
  section 27038 27115 invalid_header
  section 27115 27186 http_500
  section 27186 27257 http_502
  section 27257 27328 http_503
  section 27328 27399 http_504
  section 27399 27470 http_403
  section 27470 27541 http_404
  section 27541 27856 non_idempotent
  section 27856 28794 off
  section 28794 29147 proxy_next_upstream_timeout
  section 29147 29503 proxy_next_upstream_tries
  section 29503 30043 proxy_no_cache
  section 30043 32878 proxy_pass
  section 32878 33118 proxy_pass_header
  section 33118 33662 proxy_pass_request_body
  section 33662 34222 proxy_pass_request_headers
  section 34222 34670 proxy_read_timeout
  section 34670 37457 proxy_redirect
  section 37457 38340 proxy_request_buffering
  section 38340 38848 proxy_send_lowat
  section 38848 39294 proxy_send_timeout
  section 39294 39577 proxy_set_body
  section 39577 41229 proxy_set_header
  section 41229 41550 proxy_ssl_certificate
  section 41550 42062 proxy_ssl_certificate_key
  section 42062 42511 proxy_ssl_ciphers
  section 42511 42836 proxy_ssl_crl
  section 42836 43308 proxy_ssl_name
  section 43308 43683 proxy_ssl_password_file
  section 43683 44148 proxy_ssl_server_name
  section 44148 44540 proxy_ssl_session_reuse
  section 44540 44923 proxy_ssl_protocols
  section 44923 45277 proxy_ssl_trusted_certificate
  section 45277 45581 proxy_ssl_verify
  section 45581 45887 proxy_ssl_verify_depth
  section 45887 47920 proxy_store
  section 47920 48402 proxy_store_access
  section 48402 48965 proxy_temp_file_write_size
  section 48965 49723 proxy_temp_path
  section 49723 50480 embedded variables
  section 49904 50010 $proxy_host
  section 50010 50480 $proxy_port

module ngx_http_random_index_module
  aliases ngx_random_index
  section 17 515 name
  section 515 607 example configuration
  section 607 822 directives
  section 626 822 random_index

module ngx_http_realip_module
  aliases ngx_realip
  section 17 369 name
  section 369 589 example configuration
  section 589 2535 directives
  section 608 1062 set_real_ip_from
  section 1062 1865 real_ip_header
  section 1865 2535 real_ip_recursive
  section 2535 2741 embedded variables
  section 2574 2652 $realip_remote_addr
  section 2652 2741 $realip_remote_port

module ngx_http_referer_module
  aliases ngx_referer
  section 17 626 name
  section 626 876 example configuration
  section 876 3136 directives
  section 895 1246 referer_hash_bucket_size
  section 1246 1599 referer_hash_max_size
  section 1599 3136 valid_referers
  section 2088 2164 none
  section 2164 2411 blocked
  section 2411 2510 server_names
  section 2510 2729 arbitrary string
  section 2729 3136 regular expression
  section 3136 3323 embedded variables
  section 3175 3323 $invalid_referer

module ngx_http_rewrite_module
  aliases ngx_rewrite
  section 17 830 name
  section 830 8160 directives
  section 849 1236 break
  section 1236 3372 if
  section 3372 4778 return
  section 4778 7261 rewrite
  section 5476 5636 last
  section 5636 5765 break
  section 5765 5946 redirect
  section 5946 7261 permanent
  section 7261 7603 rewrite_log
  section 7603 7866 set
  section 7866 8160 uninitialized_variable_warn
  section 8160 9827 internal implementation

module ngx_http_scgi_module
  aliases ngx_scgi
  section 17 177 name
  section 177 309 example configuration
  section 309 31591 directives
  section 328 1317 scgi_bind
  section 1317 1805 scgi_buffer_size
  section 1805 2991 scgi_buffering
  section 2991 3415 scgi_buffers
  section 3415 4075 scgi_busy_buffers_size
  section 4075 4479 scgi_cache
  section 4479 5043 scgi_cache_bypass
  section 5043 5288 scgi_cache_key
  section 5288 5915 scgi_cache_lock
  section 5915 6318 scgi_cache_lock_age
  section 6318 6763 scgi_cache_lock_timeout
  section 6763 7253 scgi_cache_methods
  section 7253 7507 scgi_cache_min_uses
  section 7507 11389 scgi_cache_path
  section 11389 12745 scgi_cache_purge
  section 12745 13122 scgi_cache_revalidate
  section 13122 14215 scgi_cache_use_stale
  section 14215 16078 scgi_cache_valid
  section 16078 16399 scgi_connect_timeout
  section 16399 16779 scgi_force_ranges
  section 16779 17257 scgi_hide_header
  section 17257 17597 scgi_ignore_client_abort
  section 17597 18707 scgi_ignore_headers
  section 18707 19100 scgi_intercept_errors
  section 19100 19718 scgi_limit_rate
  section 19718 20493 scgi_max_temp_file_size
  section 20493 22863 scgi_next_upstream
  section 20980 21124 error
  section 21124 21275 timeout
  section 21275 21352 invalid_header
  section 21352 21423 http_500
  section 21423 21494 http_503
  section 21494 21565 http_403
  section 21565 21636 http_404
  section 21636 21951 non_idempotent
  section 21951 22863 off
  section 22863 23214 scgi_next_upstream_timeout
  section 23214 23568 scgi_next_upstream_tries
  section 23568 24103 scgi_no_cache
  section 24103 25015 scgi_param
  section 25015 25560 scgi_pass
  section 25560 25796 scgi_pass_header
  section 25796 26120 scgi_pass_request_body
  section 26120 26464 scgi_pass_request_headers
  section 26464 26904 scgi_read_timeout
  section 26904 27735 scgi_request_buffering
  section 27735 28173 scgi_send_timeout
  section 28173 29810 scgi_store
  section 29810 30288 scgi_store_access
  section 30288 30843 scgi_temp_file_write_size
  section 30843 31591 scgi_temp_path

module ngx_http_secure_link_module
  aliases ngx_secure_link
  section 17 1102 name
  section 1102 5063 directives
  section 1121 2468 secure_link
  section 2468 3845 secure_link_md5
  section 3845 5063 secure_link_secret
  section 5063 5376 embedded variables
  section 5102 5218 $secure_link
  section 5218 5376 $secure_link_expires

module ngx_http_session_log_module
  aliases ngx_session_log
  section 17 346 name
  section 346 790 example configuration
  section 790 2791 directives
  section 809 1207 session_log_format
  section 1207 2453 session_log_zone
  section 2453 2791 session_log
  section 2791 3057 embedded variables
  section 2906 2958 $session_log_id
  section 2958 3057 $session_log_binary_id

module ngx_http_slice_module
  aliases ngx_slice
  section 17 427 name
  section 427 883 example configuration
  section 883 1646 directives
  section 902 1646 slice
  section 1646 1942 embedded variables
  section 1764 1942 $slice_range

module ngx_http_spdy_module
  aliases ngx_spdy
  section 17 718 name
  section 718 1190 known issues
  section 1190 1651 example configuration
  section 1651 2535 directives
  section 1670 2199 spdy_chunk_size
  section 2199 2535 spdy_headers_comp
  section 2535 2870 embedded variables
  section 2652 2748 $spdy
  section 2748 2870 $spdy_request_priority

module ngx_http_split_clients_module
  aliases ngx_split_clients
  section 17 239 name
  section 239 590 example configuration
  section 590 1350 directives
  section 609 1350 split_clients

module ngx_http_ssi_module
  aliases ngx_ssi
  section 17 288 name
  section 288 383 example configuration
  section 383 2489 directives
  section 402 654 ssi
  section 654 1236 ssi_last_modified
  section 1236 1556 ssi_min_file_chunk
  section 1556 1895 ssi_silent_errors
  section 1895 2253 ssi_types
  section 2253 2489 ssi_value_length
  section 2489 7531 ssi commands
  section 2683 2865 block
  section 2865 2992 name
  section 2992 3079 config
  section 3079 3275 errmsg
  section 3275 3536 timefmt
  section 3536 3639 echo
  section 3639 3678 var
  section 3678 3811 encoding
  section 3811 4225 default
  section 4225 4543 if
  section 4543 5384 expr
  section 5384 5513 include
  section 5513 5624 file
  section 5624 5960 virtual
  section 5960 6385 stub
  section 6385 6621 wait
  section 6621 7257 set
  section 7257 7354 set
  section 7354 7393 var
  section 7393 7531 value
  section 7531 7910 embedded variables
  section 7637 7776 $date_local
  section 7776 7910 $date_gmt

module ngx_http_ssl_module
  aliases ngx_ssl
  section 17 375 name
  section 375 1418 example configuration
  section 1418 14636 directives
  section 1437 1752 ssl
  section 1752 2220 ssl_buffer_size
  section 2220 3964 ssl_certificate
  section 3964 4372 ssl_certificate_key
  section 4372 4917 ssl_ciphers
  section 4917 5346 ssl_client_certificate
  section 5346 5609 ssl_crl
  section 5609 5830 ssl_dhparam
  section 5830 6524 ssl_ecdh_curve
  section 6524 7327 ssl_password_file
  section 7327 7614 ssl_prefer_server_ciphers
  section 7614 8218 ssl_protocols
  section 8218 9621 ssl_session_cache
  section 8584 8720 off
  section 8720 8901 none
  section 8901 9136 builtin
  section 9136 9621 shared
  section 9621 10405 ssl_session_ticket_key
  section 10405 10720 ssl_session_tickets
  section 10720 10963 ssl_session_timeout
  section 10963 11737 ssl_stapling
  section 11737 12159 ssl_stapling_file
  section 12159 12640 ssl_stapling_responder
  section 12640 13134 ssl_stapling_verify
  section 13134 13607 ssl_trusted_certificate
  section 13607 14427 ssl_verify_client
  section 14427 14636 ssl_verify_depth
  section 14636 15208 error processing
  section 15208 16948 embedded variables
  section 15318 15416 $ssl_cipher
  section 15416 15671 $ssl_client_cert
  section 15671 15809 $ssl_client_fingerprint
  section 15809 15931 $ssl_client_raw_cert
  section 15931 16053 $ssl_client_serial
  section 16053 16184 $ssl_client_s_dn
  section 16184 16314 $ssl_client_i_dn
  section 16314 16491 $ssl_client_verify
  section 16491 16576 $ssl_protocol
  section 16576 16719 $ssl_server_name
  section 16719 16816 $ssl_session_id
  section 16816 16948 $ssl_session_reused

module ngx_http_status_module
  aliases ngx_status
  section 17 268 name
  section 268 2572 example configuration
  section 2572 3632 directives
  section 2591 2785 status
  section 2785 3337 status_format
  section 3337 3632 status_zone
  section 3632 13552 data
  section 3703 3787 version
  section 3787 3835 nginx_version
  section 3835 3915 address
  section 3915 3996 generation
  section 3996 4098 load_timestamp
  section 4098 4166 timestamp
  section 4166 4244 pid
  section 4244 4277 processes
  section 4277 4388 respawned
  section 4388 4423 connections
  section 4423 4497 accepted
  section 4497 4569 dropped
  section 4569 4641 active
  section 4641 4721 idle
  section 4721 4748 ssl
  section 4748 4822 handshakes
  section 4822 4899 handshakes_failed
  section 4899 4999 session_reuses
  section 4999 5031 requests
  section 5031 5090 total
  section 5090 5165 current
  section 5165 5227 server_zones
  section 5227 5320 processing
  section 5320 5404 requests
  section 5404 5437 responses
  section 5437 5643 total
  section 5643 5736 discarded
  section 5736 5810 received
  section 5810 5886 sent
  section 5886 6049 upstreams
  section 6049 6149 peers
  section 6149 6190 id
  section 6190 6267 server
  section 6267 6377 backup
  section 6377 6450 weight
  section 6450 6595 state
  section 6595 6660 active
  section 6660 6740 max_conns
  section 6740 6827 requests
  section 6827 6860 responses
  section 6860 7076 total
  section 7076 7144 sent
  section 7144 7222 received
  section 7222 7318 fails
  section 7318 7527 unavail
  section 7527 7564 health_checks
  section 7564 7663 checks
  section 7663 7721 fails
  section 7721 7818 unhealthy
  section 7818 7971 last_passed
  section 7971 8077 downtime
  section 8077 8205 downstart
  section 8205 8333 selected
  section 8333 8548 header_time
  section 8548 8775 response_time
  section 8775 8869 keepalive
  section 8869 8977 queue
  section 8977 9043 size
  section 9043 9142 max_size
  section 9142 9257 overflows
  section 9257 9358 caches
  section 9358 9410 size
  section 9410 9510 max_size
  section 9510 9729 cold
  section 9729 9879 responses
  section 9879 10025 bytes
  section 10025 10184 responses
  section 10184 10262 bytes
  section 10262 10348 responses_written
  section 10348 10450 bytes_written
  section 10450 10480 stream
  section 10480 10542 server_zones
  section 10542 10638 processing
  section 10638 10721 connections
  section 10721 10795 received
  section 10795 10871 sent
  section 10871 11038 upstreams
  section 11038 11139 peers
  section 11139 11180 id
  section 11180 11259 server
  section 11259 11371 backup
  section 11371 11446 weight
  section 11446 11572 state
  section 11572 11630 active
  section 11630 11723 connections
  section 11723 11895 connect_time
  section 11895 12070 first_byte_time
  section 12070 12242 response_time
  section 12242 12310 sent
  section 12310 12388 received
  section 12388 12484 fails
  section 12484 12698 unavail
  section 12698 12735 health_checks
  section 12735 12836 checks
  section 12836 12894 fails
  section 12894 12991 unhealthy
  section 12991 13146 last_passed
  section 13146 13252 downtime
  section 13252 13380 downstart
  section 13380 13552 selected
  section 13552 14808 compatibility

module ngx_http_stub_status_module
  aliases ngx_stub_status
  section 17 331 name
  section 331 679 example configuration
  section 679 995 directives
  section 698 995 stub_status
  section 995 1852 data
  section 1066 1183 active connections
  section 1183 1256 accepts
  section 1256 1469 handled
  section 1469 1531 requests
  section 1531 1632 reading
  section 1632 1746 writing
  section 1746 1852 waiting
  section 1852 2276 embedded variables
  section 1985 2062 $connections_active
  section 2062 2129 $connections_reading
  section 2129 2196 $connections_writing
  section 2196 2276 $connections_waiting

module ngx_http_sub_module
  aliases ngx_sub
  section 17 337 name
  section 337 595 example configuration
  section 595 2140 directives
  section 614 1040 sub_filter
  section 1040 1521 sub_filter_last_modified
  section 1521 1776 sub_filter_once
  section 1776 2140 sub_filter_types

module ngx_http_upstream_conf_module
  aliases ngx_upstream_conf
  section 17 480 name
  section 480 772 example configuration
  section 772 6710 directives
  section 791 6710 upstream_conf
  section 4190 6710 drain=

module ngx_http_upstream_module
  aliases ngx_upstream
  section 17 362 name
  section 362 1553 example configuration
  section 1553 27489 directives
  section 1572 2652 upstream
  section 2652 7471 server
  section 7471 8174 zone
  section 8174 8923 state
  section 8923 10044 hash
  section 10044 11245 ip_hash
  section 11245 13673 keepalive
  section 13673 14975 ntlm
  section 14975 15411 least_conn
  section 15411 16156 least_time
  section 16156 19083 health_check
  section 19083 21413 match
  section 19311 19351 status 200;
  section 19351 19397 status ! 500;
  section 19397 19448 status 200 204;
  section 19448 19510 status ! 301 302;
  section 19510 19579 status 200-399;
  section 19579 19654 status ! 400-599;
  section 19654 19747 status 301-303 307;
  section 19747 19862 header content-type = text/html;
  section 19862 19989 header content-type != text/html;
  section 19989 20110 header connection ~ close;
  section 20110 20236 header connection !~ close;
  section 20236 20287 header host;
  section 20287 20381 header ! x-accel-redirect;
  section 20381 20484 body ~ welcome to nginx!;
  section 20484 21413 body !~ welcome to nginx!;
  section 21413 22236 queue
  section 22236 27069 sticky
  section 22870 23668 cookie
  section 23668 23965 expires=time
  section 23965 24055 domain=domain
  section 24055 24135 httponly
  section 24135 24212 secure
  section 24212 24386 path=path
  section 24386 25603 route
  section 25603 27069 learn
  section 27069 27489 sticky_cookie_insert
  section 27489 30500 embedded variables
  section 27610 28215 $upstream_addr
  section 28215 28460 $upstream_cache_status
  section 28460 28798 $upstream_connect_time
  section 28798 29025 $upstream_cookie_i<name>
  section 29025 29315 $upstream_header_time
  section 29315 29733 $upstream_http_i<name>
  section 29733 29993 $upstream_response_length
  section 29993 30269 $upstream_response_time
  section 30269 30500 $upstream_status

module ngx_http_userid_module
  aliases ngx_userid
  section 17 390 name
  section 390 637 example configuration
  section 637 4188 directives
  section 656 1341 userid
  section 944 1041 on
  section 1041 1138 v1
  section 1138 1236 log
  section 1236 1341 off
  section 1341 1640 userid_domain
  section 1640 2083 userid_expires
  section 2083 2906 userid_mark
  section 2906 3091 userid_name
  section 3091 3459 userid_p3p
  section 3459 3669 userid_path
  section 3669 4188 userid_service
  section 4188 4723 embedded variables
  section 4307 4380 $uid_got
  section 4380 4641 $uid_reset
  section 4641 4723 $uid_set

module ngx_http_uwsgi_module
  aliases ngx_uwsgi
  section 17 180 name
  section 180 315 example configuration
  section 315 37435 directives
  section 334 1328 uwsgi_bind
  section 1328 1819 uwsgi_buffer_size
  section 1819 3016 uwsgi_buffering
  section 3016 3443 uwsgi_buffers
  section 3443 4108 uwsgi_busy_buffers_size
  section 4108 4514 uwsgi_cache
  section 4514 5083 uwsgi_cache_bypass
  section 5083 5331 uwsgi_cache_key
  section 5331 5962 uwsgi_cache_lock
  section 5962 6369 uwsgi_cache_lock_age
  section 6369 6818 uwsgi_cache_lock_timeout
  section 6818 7311 uwsgi_cache_methods
  section 7311 7567 uwsgi_cache_min_uses
  section 7567 11453 uwsgi_cache_path
  section 11453 12816 uwsgi_cache_purge
  section 12816 13195 uwsgi_cache_revalidate
  section 13195 14295 uwsgi_cache_use_stale
  section 14295 16167 uwsgi_cache_valid
  section 16167 16490 uwsgi_connect_timeout
  section 16490 16873 uwsgi_force_ranges
  section 16873 17355 uwsgi_hide_header
  section 17355 17697 uwsgi_ignore_client_abort
  section 17697 18810 uwsgi_ignore_headers
  section 18810 19205 uwsgi_intercept_errors
  section 19205 19829 uwsgi_limit_rate
  section 19829 20610 uwsgi_max_temp_file_size
  section 20610 20930 uwsgi_modifier1
  section 20930 21250 uwsgi_modifier2
  section 21250 23622 uwsgi_next_upstream
  section 21739 21883 error
  section 21883 22034 timeout
  section 22034 22111 invalid_header
  section 22111 22182 http_500
  section 22182 22253 http_503
  section 22253 22324 http_403
  section 22324 22395 http_404
  section 22395 22710 non_idempotent
  section 22710 23622 off
  section 23622 23975 uwsgi_next_upstream_timeout
  section 23975 24331 uwsgi_next_upstream_tries
  section 24331 24871 uwsgi_no_cache
  section 24871 25791 uwsgi_param
  section 25791 26644 uwsgi_pass
  section 26644 26882 uwsgi_pass_header
  section 26882 27210 uwsgi_pass_request_body
  section 27210 27558 uwsgi_pass_request_headers
  section 27558 28002 uwsgi_read_timeout
  section 28002 28836 uwsgi_request_buffering
  section 28836 29278 uwsgi_send_timeout
  section 29278 29599 uwsgi_ssl_certificate
  section 29599 30111 uwsgi_ssl_certificate_key
  section 30111 30560 uwsgi_ssl_ciphers
  section 30560 30885 uwsgi_ssl_crl
  section 30885 31360 uwsgi_ssl_name
  section 31360 31735 uwsgi_ssl_password_file
  section 31735 32118 uwsgi_ssl_protocols
  section 32118 32583 uwsgi_ssl_server_name
  section 32583 33024 uwsgi_ssl_session_reuse
  section 33024 33378 uwsgi_ssl_trusted_certificate
  section 33378 33682 uwsgi_ssl_verify
  section 33682 33988 uwsgi_ssl_verify_depth
  section 33988 35636 uwsgi_store
  section 35636 36118 uwsgi_store_access
  section 36118 36679 uwsgi_temp_file_write_size
  section 36679 37435 uwsgi_temp_path

module ngx_http_v2_module
  aliases ngx_v2
  section 17 402 name
  section 402 705 known issues
  section 705 1509 example configuration
  section 1509 3994 directives
  section 1528 1931 http2_chunk_size
  section 1931 2266 http2_body_preread_size
  section 2266 2485 http2_idle_timeout
  section 2485 2733 http2_max_concurrent_streams
  section 2733 3211 http2_max_field_size
  section 3211 3546 http2_max_header_size
  section 3546 3747 http2_recv_buffer_size
  section 3747 3994 http2_recv_timeout
  section 3994 4294 embedded variables
  section 4109 4294 $http2

module ngx_http_xslt_module
  aliases ngx_xslt
  section 17 455 name
  section 455 672 example configuration
  section 672 4661 directives
  section 691 1268 xml_entities
  section 1268 1863 xslt_last_modified
  section 1863 2509 xslt_param
  section 2509 3101 xslt_string_param
  section 3101 4211 xslt_stylesheet
  section 4211 4661 xslt_types

module ngx_mail_auth_http_module
  section 17 95 name
  section 95 1290 directives
  section 114 307 auth_http
  section 307 684 auth_http_header
  section 684 1074 auth_http_pass_client_cert
  section 1074 1290 auth_http_timeout
  section 1290 5162 protocol

module ngx_mail_core_module
  section 17 206 name
  section 206 1216 example configuration
  section 1216 7961 directives
  section 1235 4813 listen
  section 4813 4969 mail
  section 4969 5702 protocol
  section 5702 6888 resolver
  section 6888 7116 resolver_timeout
  section 7116 7222 server
  section 7222 7763 server_name
  section 7763 7961 timeout

module ngx_mail_imap_module
  section 17 85 name
  section 85 1896 directives
  section 104 663 imap_auth
  section 330 423 login
  section 423 494 plain
  section 494 663 cram-md5
  section 663 1587 imap_capabilities
  section 1587 1896 imap_client_buffer

module ngx_mail_pop3_module
  section 17 85 name
  section 85 1855 directives
  section 104 882 pop3_auth
  section 330 573 plain
  section 573 713 apop
  section 713 882 cram-md5
  section 882 1855 pop3_capabilities

module ngx_mail_proxy_module
  section 17 87 name
  section 87 3026 directives
  section 106 407 proxy_buffer
  section 407 1363 proxy_pass_error_message
  section 1363 1689 proxy_timeout
  section 1689 3026 xclient

module ngx_mail_smtp_module
  section 17 85 name
  section 85 1487 directives
  section 104 765 smtp_auth
  section 379 472 login
  section 472 543 plain
  section 543 696 cram-md5
  section 696 765 none
  section 765 1487 smtp_capabilities

module ngx_mail_ssl_module
  section 17 428 name
  section 428 1372 example configuration
  section 1372 11701 directives
  section 1391 1580 ssl
  section 1580 2678 ssl_certificate
  section 2678 3078 ssl_certificate_key
  section 3078 3623 ssl_ciphers
  section 3623 4048 ssl_client_certificate
  section 4048 4312 ssl_crl
  section 4312 4533 ssl_dhparam
  section 4533 5227 ssl_ecdh_curve
  section 5227 6032 ssl_password_file
  section 6032 6322 ssl_prefer_server_ciphers
  section 6322 6925 ssl_protocols
  section 6925 8320 ssl_session_cache
  section 7291 7427 off
  section 7427 7608 none
  section 7608 7843 builtin
  section 7843 8320 shared
  section 8320 9104 ssl_session_ticket_key
  section 9104 9419 ssl_session_tickets
  section 9419 9662 ssl_session_timeout
  section 9662 10086 ssl_trusted_certificate
  section 10086 11021 ssl_verify_client
  section 11021 11276 ssl_verify_depth
  section 11276 11701 starttls
  section 11447 11556 on
  section 11556 11628 off
  section 11628 11701 only

module ngx_stream_access_module
  section 17 206 name
  section 206 673 example configuration
  section 673 1336 directives
  section 692 1015 allow
  section 1015 1336 deny

module ngx_stream_core_module
  section 17 283 name
  section 283 1283 example configuration
  section 1283 8077 directives
  section 1302 5447 listen
  section 5447 6454 resolver
  section 6454 6834 resolver_timeout
  section 6834 6942 server
  section 6942 7104 stream
  section 7104 7427 tcp_nodelay
  section 7427 7751 variables_hash_bucket_size
  section 7751 8077 variables_hash_max_size
  section 8077 9231 embedded variables
  section 8186 8340 $binary_remote_addr
  section 8340 8401 $bytes_sent
  section 8401 8454 $connection
  section 8454 8490 $hostname
  section 8490 8569 $msec
  section 8569 8614 $nginx_version
  section 8614 8661 $pid
  section 8661 8705 $remote_addr
  section 8705 8746 $remote_port
  section 8746 9005 $server_addr
  section 9005 9081 $server_port
  section 9081 9154 $time_iso8601
  section 9154 9231 $time_local

module ngx_stream_geo_module
  section 17 212 name
  section 212 443 example configuration
  section 443 2859 directives
  section 462 2859 geo
  section 1341 1395 delete
  section 1395 1722 default
  section 1722 1822 include
  section 1822 2859 ranges

module ngx_stream_geoip_module
  section 17 612 name
  section 612 1006 example configuration
  section 1006 3667 directives
  section 1025 1616 geoip_country
  section 1278 1378 $geoip_country_code
  section 1378 1484 $geoip_country_code3
  section 1484 1616 $geoip_country_name
  section 1616 3309 geoip_city
  section 1881 2165 $geoip_area_code
  section 2165 2271 $geoip_city_country_code
  section 2271 2382 $geoip_city_country_code3
  section 2382 2504 $geoip_city_country_name
  section 2504 2722 $geoip_dma_code
  section 2722 2762 $geoip_latitude
  section 2762 2804 $geoip_longitude
  section 2804 2969 $geoip_region
  section 2969 3155 $geoip_region_name
  section 3155 3245 $geoip_city
  section 3245 3309 $geoip_postal_code
  section 3309 3667 geoip_org
  section 3557 3667 $geoip_org

module ngx_stream_limit_conn_module
  section 17 297 name
  section 297 575 example configuration
  section 575 2576 directives
  section 594 1321 limit_conn
  section 1321 1626 limit_conn_log_level
  section 1626 2576 limit_conn_zone

module ngx_stream_map_module
  section 17 214 name
  section 214 431 example configuration
  section 431 3513 directives
  section 450 2878 map
  section 1679 1887 default value
  section 1887 2223 hostnames
  section 2223 2878 include file
  section 2878 3236 map_hash_bucket_size
  section 3236 3513 map_hash_max_size

module ngx_stream_proxy_module
  section 17 229 name
  section 229 739 example configuration
  section 739 10128 directives
  section 758 1736 proxy_bind
  section 1736 2091 proxy_buffer_size
  section 2091 2321 proxy_connect_timeout
  section 2321 2839 proxy_download_rate
  section 2839 3238 proxy_next_upstream
  section 3238 3514 proxy_next_upstream_timeout
  section 3514 3804 proxy_next_upstream_tries
  section 3804 4600 proxy_pass
  section 4600 4928 proxy_protocol
  section 4928 5385 proxy_responses
  section 5385 5603 proxy_ssl
  section 5603 5849 proxy_ssl_certificate
  section 5849 6102 proxy_ssl_certificate_key
  section 6102 6479 proxy_ssl_ciphers
  section 6479 6729 proxy_ssl_crl
  section 6729 7197 proxy_ssl_name
  section 7197 7503 proxy_ssl_password_file
  section 7503 7893 proxy_ssl_server_name
  section 7893 8261 proxy_ssl_session_reuse
  section 8261 8572 proxy_ssl_protocols
  section 8572 8851 proxy_ssl_trusted_certificate
  section 8851 9080 proxy_ssl_verify
  section 9080 9311 proxy_ssl_verify_depth
  section 9311 9639 proxy_timeout
  section 9639 10128 proxy_upload_rate

module ngx_stream_return_module
  section 17 235 name
  section 235 350 example configuration
  section 350 564 directives
  section 369 564 return

module ngx_stream_split_clients_module
  section 17 254 name
  section 254 643 example configuration
  section 643 1405 directives
  section 662 1405 split_clients

module ngx_stream_ssl_module
  section 17 362 name
  section 362 1310 example configuration
  section 1310 8331 directives
  section 1329 2431 ssl_certificate
  section 2431 2825 ssl_certificate_key
  section 2825 3261 ssl_ciphers
  section 3261 3439 ssl_dhparam
  section 3439 4045 ssl_ecdh_curve
  section 4045 4259 ssl_handshake_timeout
  section 4259 5009 ssl_password_file
  section 5009 5301 ssl_prefer_server_ciphers
  section 5301 5676 ssl_protocols
  section 5676 7073 ssl_session_cache
  section 6044 6180 off
  section 6180 6361 none
  section 6361 6596 builtin
  section 6596 7073 shared
  section 7073 7814 ssl_session_ticket_key
  section 7814 8086 ssl_session_tickets
  section 8086 8331 ssl_session_timeout
  section 8331 8975 embedded variables
  section 8437 8535 $ssl_cipher
  section 8535 8620 $ssl_protocol
  section 8620 8755 $ssl_server_name
  section 8755 8852 $ssl_session_id
  section 8852 8975 $ssl_session_reused

module ngx_stream_upstream_module
  section 17 264 name
  section 264 1465 example configuration
  section 1465 15018 directives
  section 1484 2578 upstream
  section 2578 7000 server
  section 7000 7657 zone
  section 7657 8406 state
  section 8406 9534 hash
  section 9534 9890 least_conn
  section 9890 10709 least_time
  section 10709 12913 health_check
  section 12913 13222 health_check_timeout
  section 13222 15018 match

module request_processing
  section 18 85 name
  section 85 1590 name-based virtual servers
  section 1590 2289 how to prevent processing requests with undefined server names
  section 2289 4031 mixed name-based and ip-based virtual servers
  section 4031 7803 a simple php site configuration

module server_names
  section 18 1308 name
  section 1308 1980 wildcard names
  section 1980 3759 regular expressions names
  section 3759 6442 miscellaneous names
  section 6442 9510 optimization
  section 9510 10398 compatibility

module switches
  section 18 1616 name

module syntax
  section 18 963 name

module sys_errlist
  section 18 535 name

module syslog
  section 18 2131 name
  section 223 598 server=address
  section 598 1079 facility=string
  section 1079 1505 severity=string
  section 1505 1598 tag=string
  section 1598 2131 nohostname

module variables_in_config
  section 18 717 name

module websocket
  section 18 2478 name

module welcome_nginx_facebook
  section 18 5785 name

module windows
  section 18 2249 name
  section 2249 2726 known issues
  section 2726 2975 possible future enhancements

dist lua-5.1.5
  modules lua-5.1.5

module lua-5.1.5
  section 23 286 lua 5.1 reference manual
  section 286 1903 introduction
  section 1903 56832 the language
  section 2494 6469 lexical conventions
  section 6469 9733 values and types
  section 9733 10230 coercion
  section 10230 12425 variables
  section 12425 12633 statements
  section 12633 13583 chunks
  section 13583 14004 blocks
  section 14004 15965 assignment
  section 15965 17558 control structures
  section 17558 20237 for statement
  section 18436 18557 all three control expressions are evaluated only once, before
  section 18557 18686 var, limit, and step are invisible variables.
  section 18686 18767 if the third expression (the step) is absent, then a step of 1
  section 18767 18820 you can use break to exit a for loop.
  section 18820 19691 the loop variable v is local to the loop; you cannot use its
  section 19691 19848 explist is evaluated only once. its results are an
  section 19848 19964 f, s, and var are invisible variables. the
  section 19964 20017 you can use break to exit a for loop.
  section 20017 20237 the loop variables var_i are local to the loop; you
  section 20237 20483 function calls as statements
  section 20483 21089 local declarations
  section 21089 23896 expressions
  section 23896 24538 arithmetic operators
  section 24538 25966 relational operators
  section 25966 27045 logical operators
  section 27045 27340 concatenation
  section 27340 28092 the length operator
  section 28092 28550 precedence
  section 28550 30169 table constructors
  section 30169 32583 function calls
  section 32583 35921 function definitions
  section 35921 37411 visibility rules
  section 37411 37907 error handling
  section 37907 47900 metatables
  section 40693 41665 add: the + operation.
  section 41665 41745 sub: the - operation. behavior similar to the add
  section 41745 41825 mul: the * operation. behavior similar to the add
  section 41825 41905 div: the / operation. behavior similar to the add
  section 41905 42056 mod: the % operation. behavior similar to the add
  section 42056 42232 pow: the ^ (exponentiation) operation. behavior similar
  section 42232 42774 unm: the unary - operation.
  section 42774 43251 concat: the .. (concatenation) operation.
  section 43251 43839 len: the # operation.
  section 43839 44868 eq: the == operation. the function getcomphandler
  section 44868 45413 lt: the < operation.
  section 45413 46234 le: the <= operation.
  section 46234 46845 index: the indexing access table[key].
  section 46845 47538 newindex: the indexing assignment table[key] = value.
  section 47538 47900 call: called when lua calls a value.
  section 47900 49651 environments
  section 49651 51359 garbage collection
  section 51359 52450 garbage-collection metamethods
  section 52450 53498 weak tables
  section 53498 56832 coroutines
  section 56832 112126 the application program interface
  section 57605 58842 the stack
  section 58842 59733 stack size
  section 59733 60529 pseudo-indices
  section 60529 61219 c closures
  section 61219 61886 registry
  section 61886 62587 error handling in c
  section 62587 63590 functions and types
  section 63590 65260 lua_alloc
  section 65260 65737 lua_atpanic
  section 65737 67685 lua_call
  section 67685 69206 lua_cfunction
  section 69206 69540 lua_checkstack
  section 69540 70072 lua_close
  section 70072 70478 lua_concat
  section 70478 70950 lua_cpcall
  section 70950 71350 lua_createtable
  section 71350 71926 lua_dump
  section 71926 72261 lua_equal
  section 72261 72529 lua_error
  section 72529 73848 lua_gc
  section 72740 72796 lua_gcstop: stops the garbage collector.
  section 72796 72858 lua_gcrestart: restarts the garbage collector.
  section 72858 72930 lua_gccollect: performs a full garbage-collection cycle.
  section 72930 73022 lua_gccount: returns the current amount of memory (in
  section 73022 73146 lua_gccountb: returns the remainder of dividing the
  section 73146 73482 lua_gcstep: performs an incremental step of garbage
  section 73482 73650 lua_gcsetpause: sets data as the new value for the
  section 73650 73848 lua_gcsetstepmul: sets data as the new value for the
  section 73848 74093 lua_getallocf
  section 74093 74257 lua_getfenv
  section 74257 74542 lua_getfield
  section 74542 74792 lua_getglobal
  section 74792 75098 lua_getmetatable
  section 75098 75501 lua_gettable
  section 75501 75746 lua_gettop
  section 75746 76032 lua_insert
  section 76032 76268 lua_integer
  section 76268 76446 lua_isboolean
  section 76446 76627 lua_iscfunction
  section 76627 76822 lua_isfunction
  section 76822 77015 lua_islightuserdata
  section 77015 77178 lua_isnil
  section 77178 77394 lua_isnone
  section 77394 77660 lua_isnoneornil
  section 77660 77867 lua_isnumber
  section 77867 78092 lua_isstring
  section 78092 78260 lua_istable
  section 78260 78431 lua_isthread
  section 78431 78631 lua_isuserdata
  section 78631 79000 lua_lessthan
  section 79000 80005 lua_load
  section 79371 79397 0: no errors;
  section 79397 79464 lua_errsyntax: syntax error during pre-compilation;
  section 79464 80005 lua_errmem: memory allocation error.
  section 80005 80418 lua_newstate
  section 80418 80601 lua_newtable
  section 80601 81082 lua_newthread
  section 81082 81818 lua_newuserdata
  section 81818 82799 lua_next
  section 82799 83062 lua_number
  section 83062 83427 lua_objlen
  section 83427 84989 lua_pcall
  section 84747 84791 lua_errrun: a runtime error.
  section 84791 84906 lua_errmem: memory allocation error. for such errors, lua
  section 84906 84989 lua_errerr: error while running the error handler
  section 84989 85099 lua_pop
  section 85099 85245 lua_pushboolean
  section 85245 86015 lua_pushcclosure
  section 86015 86571 lua_pushcfunction
  section 86571 87448 lua_pushfstring
  section 86849 87023 you do not have to allocate space for the result: the result is
  section 87023 87448 the conversion specifiers are quite restricted. there are no
  section 87448 87595 lua_pushinteger
  section 87595 88030 lua_pushlightuserdata
  section 88030 88290 lua_pushliteral
  section 88290 88655 lua_pushlstring
  section 88655 88766 lua_pushnil
  section 88766 88910 lua_pushnumber
  section 88910 89303 lua_pushstring
  section 89303 89496 lua_pushthread
  section 89496 89657 lua_pushvalue
  section 89657 89957 lua_pushvfstring
  section 89957 90267 lua_rawequal
  section 90267 90431 lua_rawget
  section 90431 90676 lua_rawgeti
  section 90676 90844 lua_rawset
  section 90844 91180 lua_rawseti
  section 91180 91852 lua_reader
  section 91852 92187 lua_register
  section 92187 92473 lua_remove
  section 92473 92705 lua_replace
  section 92705 93675 lua_resume
  section 93675 93856 lua_setallocf
  section 93856 94172 lua_setfenv
  section 94172 94547 lua_setfield
  section 94547 94819 lua_setglobal
  section 94819 95021 lua_setmetatable
  section 95021 95437 lua_settable
  section 95437 95740 lua_settop
  section 95740 96151 lua_state
  section 96151 96415 lua_status
  section 96415 96870 lua_toboolean
  section 96870 97099 lua_tocfunction
  section 97099 97497 lua_tointeger
  section 97497 98417 lua_tolstring
  section 98417 98739 lua_tonumber
  section 98739 99205 lua_topointer
  section 99205 99362 lua_tostring
  section 99362 99624 lua_tothread
  section 99624 99891 lua_touserdata
  section 99891 100368 lua_type
  section 100368 100573 lua_typename
  section 100573 101145 lua_writer
  section 101145 101407 lua_xmove
  section 101407 101915 lua_yield
  section 101915 102220 the debug interface
  section 102220 104690 lua_debug
  section 103037 103234 source: if the function was defined in a string, then
  section 103234 103326 short_src: a printable version of source, to be used
  section 103326 103415 linedefined: the line number where the definition of the
  section 103415 103506 lastlinedefined: the line number where the definition of
  section 103506 103783 what: the string lua if the function is a lua
  section 103783 103935 currentline: the current line where the given function is
  section 103935 104336 name: a reasonable name for the given function. because
  section 104336 104621 namewhat: explains the name field. the value of
  section 104621 104690 nups: the number of upvalues of the function.
  section 104690 104805 lua_gethook
  section 104805 104922 lua_gethookcount
  section 104922 105036 lua_gethookmask
  section 105036 106761 lua_getinfo
  section 106022 106086 n: fills in the field name and namewhat;
  section 106086 106200 s: fills in the fields source, short_src,
  section 106200 106255 l: fills in the field currentline;
  section 106255 106303 u: fills in the field nups;
  section 106303 106394 f: pushes onto the stack the function that is running
  section 106394 106761 l: pushes onto the stack a table whose indices are the
  section 106761 107592 lua_getlocal
  section 107592 108126 lua_getstack
  section 108126 108899 lua_getupvalue
  section 108899 109844 lua_hook
  section 109844 111180 lua_sethook
  section 110343 110518 the call hook: is called when the interpreter calls a
  section 110518 110724 the return hook: is called when the interpreter returns from
  section 110724 110961 the line hook: is called when the interpreter is about to
  section 110961 111180 the count hook: is called after the interpreter executes
  section 111180 111671 lua_setlocal
  section 111671 112126 lua_setupvalue
  section 112126 129890 the auxiliary library
  section 113017 113140 functions and types
  section 113140 113293 lual_addchar
  section 113293 113536 lual_addlstring
  section 113536 113758 lual_addsize
  section 113758 113992 lual_addstring
  section 113992 114327 lual_addvalue
  section 114327 114694 lual_argcheck
  section 114694 115058 lual_argerror
  section 115058 116199 lual_buffer
  section 115257 115324 first you declare a variable b of type lual_buffer.
  section 115324 115393 then you initialize it with a call lual_buffinit(l, &b).
  section 115393 115486 then you add string pieces to the buffer calling any of the
  section 115486 116199 you finish by calling lual_pushresult(&b). this call leaves
  section 116199 116429 lual_buffinit
  section 116429 116919 lual_callmeta
  section 116919 117105 lual_checkany
  section 117105 117294 lual_checkint
  section 117294 117506 lual_checkinteger
  section 117506 117698 lual_checklong
  section 117698 118073 lual_checklstring
  section 118073 118257 lual_checknumber
  section 118257 119034 lual_checkoption
  section 119034 119304 lual_checkstack
  section 119304 119605 lual_checkstring
  section 119605 119816 lual_checktype
  section 119816 120038 lual_checkudata
  section 120038 120335 lual_dofile
  section 120335 120630 lual_dostring
  section 120630 121107 lual_error
  section 121107 121426 lual_getmetafield
  section 121426 121643 lual_getmetatable
  section 121643 121995 lual_gsub
  section 121995 122454 lual_loadbuffer
  section 122454 123002 lual_loadfile
  section 123002 123350 lual_loadstring
  section 123350 123737 lual_newmetatable
  section 123737 124136 lual_newstate
  section 124136 124271 lual_openlibs
  section 124271 124531 lual_optint
  section 124531 124882 lual_optinteger
  section 124882 125146 lual_optlong
  section 125146 125590 lual_optlstring
  section 125590 125852 lual_optnumber
  section 125852 126174 lual_optstring
  section 126174 126528 lual_prepbuffer
  section 126528 126696 lual_pushresult
  section 126696 127415 lual_ref
  section 127415 127764 lual_reg
  section 127764 128541 lual_register
  section 128541 128701 lual_typename
  section 128701 129086 lual_typerror
  section 129086 129459 lual_unref
  section 129459 129890 lual_where
  section 129890 189003 standard libraries
  section 130511 130577 basic library, which includes the coroutine sub-library;
  section 130577 130603 package library;
  section 130603 130633 string manipulation;
  section 130633 130662 table manipulation;
  section 130662 130712 mathematical functions (sin, log, etc.);
  section 130712 130739 input and output;
  section 130739 130777 operating system facilities;
  section 130777 131655 debug facilities.
  section 131655 131897 basic functions
  section 131897 132140 assert (v [, message])
  section 132140 133205 collectgarbage ([opt [, arg]])
  section 132326 132419 collect: performs a full garbage-collection cycle. this is
  section 132419 132468 stop: stops the garbage collector.
  section 132468 132523 restart: restarts the garbage collector.
  section 132523 132596 count: returns the total memory in use by lua (in kbytes).
  section 132596 132892 step: performs a garbage-collection step. the step size
  section 132892 133039 setpause: sets arg as the new value for the pause of
  section 133039 133205 setstepmul: sets arg as the new value for the i<step
  section 133205 133557 dofile ([filename])
  section 133557 134147 error (message [, level])
  section 134147 134406 _g
  section 134406 134753 getfenv ([f])
  section 134753 134995 getmetatable (object)
  section 134995 135285 ipairs (t)
  section 135285 135851 load (func [, chunkname])
  section 135851 136001 loadfile ([filename])
  section 136001 136244 loadstring (string [, chunkname])
  section 136244 137218 next (table [, index])
  section 137218 137520 pairs (t)
  section 137520 138025 pcall (f, arg1, ...)
  section 138025 138362 print (...)
  section 138362 138485 rawequal (v1, v2)
  section 138485 138646 rawget (table, index)
  section 138646 138902 rawset (table, index, value)
  section 138902 139156 select (index, ...)
  section 139156 139551 setfenv (f, table)
  section 139551 139883 setmetatable (table, metatable)
  section 139883 140545 tonumber (e [, base])
  section 140545 140901 tostring (e)
  section 140901 141165 type (v)
  section 141165 141519 unpack (list [, i [, j]])
  section 141519 141695 _version
  section 141695 142322 xpcall (f, err)
  section 142322 142539 coroutine manipulation
  section 142539 142704 coroutine.create (f)
  section 142704 143418 coroutine.resume (co [, val1, ...])
  section 143418 143525 coroutine.running ()
  section 143525 143992 coroutine.status (co)
  section 143992 144358 coroutine.wrap (f)
  section 144358 144609 coroutine.yield (...)
  section 144609 144865 modules
  section 144865 145998 module (name [, ...])
  section 145998 147473 require (modname)
  section 147473 147747 package.cpath
  section 147747 147979 package.loaded
  section 147979 150554 package.loaders
  section 150554 151433 package.loadlib (libname, funcname)
  section 151433 151792 package.path
  section 151792 151885 package.preload
  section 151885 152127 package.seeall (module)
  section 152127 152908 string manipulation
  section 152908 153205 string.byte (s [, i [, j]])
  section 153205 153522 string.char (...)
  section 153522 153763 string.dump (function)
  section 153763 154542 string.find (s, pattern [, init [, plain]])
  section 154542 155699 string.format (formatstring, ...)
  section 155699 156475 string.gmatch (s, pattern)
  section 156475 158565 string.gsub (s, pattern, repl [, n])
  section 158565 158734 string.len (s)
  section 158734 158983 string.lower (s)
  section 158983 159390 string.match (s, pattern [, init])
  section 159390 159499 string.rep (s, n)
  section 159499 159582 string.reverse (s)
  section 159582 159980 string.sub (s, i [, j])
  section 159980 160227 string.upper (s)
  section 160227 160252 patterns
  section 160252 162558 character class:
  section 160420 160543 x: (where x is not one of the magic characters
  section 160543 160596 .: (a dot) represents all characters.
  section 160596 160639 %a: represents all letters.
  section 160639 160693 %c: represents all control characters.
  section 160693 160735 %d: represents all digits.
  section 160735 160788 %l: represents all lowercase letters.
  section 160788 160846 %p: represents all punctuation characters.
  section 160846 160898 %s: represents all space characters.
  section 160898 160951 %u: represents all uppercase letters.
  section 160951 161010 %w: represents all alphanumeric characters.
  section 161010 161064 %x: represents all hexadecimal digits.
  section 161064 161131 %z: represents the character with representation 0.
  section 161131 161407 %x: (where x is any non-alphanumeric character)
  section 161407 162091 [set]: represents the class which is the union of all
  section 162091 162558 [^set]: represents the complement of set, where
  section 162558 163965 pattern item:
  section 162613 162697 a single character class, which matches any single character in
  section 162697 162887 a single character class followed by *, which matches 0 or
  section 162887 163077 a single character class followed by +, which matches 1 or
  section 163077 163291 a single character class followed by -, which also matches
  section 163291 163406 a single character class followed by ?, which matches 0 or
  section 163406 163531 %n, for n between 1 and 9; such item matches a
  section 163531 163965 c<%bi<xy>>, where x and y are two distinct characters;
  section 163965 164298 pattern:
  section 164298 165115 captures:
  section 165115 165468 table manipulation
  section 165468 165846 table.concat (table [, sep [, i [, j]]])
  section 165846 166180 table.insert (table, [pos,] value)
  section 166180 166407 table.maxn (table)
  section 166407 166759 table.remove (table [, pos])
  section 166759 167351 table.sort (table [, comp])
  section 167351 167507 mathematical functions
  section 167507 167569 math.abs (x)
  section 167569 167641 math.acos (x)
  section 167641 167711 math.asin (x)
  section 167711 167784 math.atan (x)
  section 167784 167994 math.atan2 (y, x)
  section 167994 168080 math.ceil (x)
  section 168080 168161 math.cos (x)
  section 168161 168227 math.cosh (x)
  section 168227 168307 math.deg (x)
  section 168307 168358 math.exp (x)
  section 168358 168445 math.floor (x)
  section 168445 168568 math.fmod (x, y)
  section 168568 168747 math.frexp (x)
  section 168747 168852 math.huge
  section 168852 168927 math.ldexp (m, e)
  section 168927 168992 math.log (x)
  section 168992 169059 math.log10 (x)
  section 169059 169161 math.max (x, ...)
  section 169161 169263 math.min (x, ...)
  section 169263 169370 math.modf (x)
  section 169370 169411 math.pi
  section 169411 169519 math.pow (x, y)
  section 169519 169599 math.rad (x)
  section 169599 170152 math.random ([m [, n]])
  section 170152 170290 math.randomseed (x)
  section 170290 170369 math.sin (x)
  section 170369 170433 math.sinh (x)
  section 170433 170559 math.sqrt (x)
  section 170559 170641 math.tan (x)
  section 170641 170707 math.tanh (x)
  section 170707 171705 input and output facilities
  section 171705 171818 io.close ([file])
  section 171818 171901 io.flush ()
  section 171901 172302 io.input ([file])
  section 172302 172925 io.lines ([filename])
  section 172925 173712 io.open (filename [, mode])
  section 173177 173219 r: read mode (the default);
  section 173219 173248 w: write mode;
  section 173248 173278 a: append mode;
  section 173278 173341 r+: update mode, all previous data is preserved;
  section 173341 173401 w+: update mode, all previous data is erased;
  section 173401 173712 a+: append update mode, previous data is preserved,
  section 173712 173811 io.output ([file])
  section 173811 174136 io.popen (prog [, mode])
  section 174136 174221 io.read (...)
  section 174221 174377 io.tmpfile ()
  section 174377 174607 io.type (obj)
  section 174607 174695 io.write (...)
  section 174695 174879 file:close ()
  section 174879 174941 file:flush ()
  section 174941 175254 file:lines ()
  section 175254 176225 file:read (...)
  section 175670 175771 *n: reads a number; this is the only format that returns a
  section 175771 175890 *a: reads the whole file, starting at the current
  section 175890 176017 *l: reads the next line (skipping the end of line),
  section 176017 176225 number: reads a string with up to this number of
  section 176225 177151 file:seek ([whence] [, offset])
  section 176444 176507 set: base is position 0 (beginning of the file);
  section 176507 176552 cur: base is current position;
  section 176552 177151 end: base is end of file;
  section 177151 177798 file:setvbuf (mode [, size])
  section 177276 177364 no: no buffering; the result of any output operation
  section 177364 177521 full: full buffering; output operation is performed only
  section 177521 177798 line: line buffering; output is buffered until a newline
  section 177798 178027 file:write (...)
  section 178027 178120 operating system facilities
  section 178120 178228 os.clock ()
  section 178228 179329 os.date ([format [, time]])
  section 179329 179505 os.difftime (t2, t1)
  section 179505 179810 os.execute ([command])
  section 179810 179978 os.exit ([code])
  section 179978 180119 os.getenv (varname)
  section 180119 180324 os.remove (filename)
  section 180324 180503 os.rename (oldname, newname)
  section 180503 181233 os.setlocale (locale [, category])
  section 181233 181915 os.time ([table])
  section 181915 182532 os.tmpname ()
  section 182532 183378 the debug library
  section 183378 183885 debug.debug ()
  section 183885 183956 debug.getfenv (o)
  section 183956 184180 debug.gethook ([thread])
  section 184180 185360 debug.getinfo ([thread,] function [, what])
  section 185360 186008 debug.getlocal ([thread,] level, local)
  section 186008 186137 debug.getmetatable (object)
  section 186137 186216 debug.getregistry ()
  section 186216 186432 debug.getupvalue (func, up)
  section 186432 186561 debug.setfenv (object, table)
  section 186561 187838 debug.sethook ([thread,] hook, mask [, count])
  section 186819 186891 c: the hook is called every time lua calls a function;
  section 186891 186970 r: the hook is called every time lua returns from a
  section 186970 187838 l: the hook is called every time lua enters a new line
  section 187838 188288 debug.setlocal ([thread,] level, local, value)
  section 188288 188424 debug.setmetatable (object, table)
  section 188424 188690 debug.setupvalue (func, up, value)
  section 188690 189003 debug.traceback ([thread,] [message [, level]])
  section 189003 192563 lua stand-alone
  section 189460 189512 -e stat: executes string stat;
  section 189512 189557 -l mod: requires mod;
  section 189557 189625 -i: enters interactive mode after running script;
  section 189625 189672 -v: prints version information;
  section 189672 189715 --: stops handling options;
  section 189715 192563 -: executes stdin as a file and stops handling
  section 192563 195704 incompatibilities with the previous version
  section 192913 193505 changes in the language
  section 192958 193153 the vararg system changed from the pseudo-argument arg with
  section 193153 193284 there was a subtle change in the scope of the implicit
  section 193284 193505 the long string/long comment syntax ([[string]]) does not
  section 193505 194851 changes in the libraries
  section 193551 193678 function string.gfind was renamed string.gmatch. (see
  section 193678 193878 when string.gsub is called with a function as its third
  section 193878 194100 function table.setn was deprecated. function table.getn
  section 194100 194226 function loadlib was renamed package.loadlib. (see
  section 194226 194343 function math.mod was renamed math.fmod. (see
  section 194343 194476 functions table.foreach and table.foreachi are
  section 194476 194709 there were substantial changes in function require due to
  section 194709 194851 function collectgarbage has different arguments. function
  section 194851 195704 changes in the api
  section 194891 195055 the luaopen_* functions (to open libraries) cannot be called
  section 195055 195304 function lua_open was replaced by lua_newstate to allow
  section 195304 195477 functions lual_getn and lual_setn (from the auxiliary
  section 195477 195545 function lual_openlib was replaced by lual_register.
  section 195545 195704 function lual_checkudata now throws an error when the given
  section 195704 197381 the complete syntax of lua

dist luajit-2.1
  modules contact ext_c_api ext_ffi ext_ffi_api ext_ffi_semantics ext_ffi_tutorial ext_jit ext_profiler extensions faq install luajit-2.1 running status

module contact
  section 14 1051 contact
  section 37 60 luajit
  section 60 90 download e<rchevron>
  section 90 112 installation
  section 112 136 running
  section 136 163 extensions
  section 163 191 ffi library
  section 191 213 ffi tutorial
  section 213 232 ffi.* api
  section 232 262 ffi semantics
  section 262 285 jit.* library
  section 285 304 lua/c api
  section 304 329 profiler
  section 329 352 status
  section 352 376 changes
  section 376 389 faq
  section 389 422 performance e<rchevron>
  section 422 448 wiki e<rchevron>
  section 448 640 mailing list e<rchevron>
  section 640 1051 copyright

module ext_c_api
  section 14 4445 lua/c api extensions
  section 50 73 luajit
  section 73 103 download e<rchevron>
  section 103 125 installation
  section 125 149 running
  section 149 176 extensions
  section 176 204 ffi library
  section 204 226 ffi tutorial
  section 226 245 ffi.* api
  section 245 275 ffi semantics
  section 275 298 jit.* library
  section 298 317 lua/c api
  section 317 342 profiler
  section 342 365 status
  section 365 389 changes
  section 389 402 faq
  section 402 435 performance e<rchevron>
  section 435 461 wiki e<rchevron>
  section 461 753 mailing list e<rchevron>
  section 753 1395 luajit_setmode(l, idx, mode) e<mdash> control vm
  section 1395 1534 luajit_setmode(l, 0, luajit_mode_engine|flag)
  section 1534 2105 luajit_setmode(l, idx, luajit_mode_func|flag)
  section 2105 2349 luajit_setmode(l, trace,
  section 2349 4445 luajit_setmode(l, idx, luajit_mode_wrapcfunc|flag)

module ext_ffi
  section 14 7946 ffi library
  section 41 64 luajit
  section 64 94 download e<rchevron>
  section 94 116 installation
  section 116 140 running
  section 140 167 extensions
  section 167 195 ffi library
  section 195 217 ffi tutorial
  section 217 236 ffi.* api
  section 236 266 ffi semantics
  section 266 289 jit.* library
  section 289 308 lua/c api
  section 308 333 profiler
  section 333 356 status
  section 356 380 changes
  section 380 393 faq
  section 393 426 performance e<rchevron>
  section 426 452 wiki e<rchevron>
  section 452 1446 mailing list e<rchevron>
  section 1446 3287 motivating example: calling external c functions
  section 3287 7946 motivating example: using c data structures

module ext_ffi_api
  section 14 16456 ffi.* api functions
  section 52 75 luajit
  section 75 105 download e<rchevron>
  section 105 127 installation
  section 127 151 running
  section 151 178 extensions
  section 178 206 ffi library
  section 206 228 ffi tutorial
  section 228 247 ffi.* api
  section 247 277 ffi semantics
  section 277 300 jit.* library
  section 300 319 lua/c api
  section 319 344 profiler
  section 344 367 status
  section 367 391 changes
  section 391 404 faq
  section 404 437 performance e<rchevron>
  section 437 463 wiki e<rchevron>
  section 463 660 mailing list e<rchevron>
  section 660 1704 glossary
  section 684 758 cdecl e<mdash> an abstract c type declaration (a lua
  section 758 915 ctype e<mdash> a c type object. this is a special kind of
  section 915 1007 cdata e<mdash> a c data object. it holds a value of the
  section 1007 1175 ct e<mdash> a c type specification which can be used for
  section 1175 1345 cb e<mdash> a callback object. this is a c data object
  section 1345 1538 vla e<mdash> a variable-length array is declared with a ?
  section 1538 1704 vls e<mdash> a variable-length struct is a struct c type
  section 1704 1914 declaring and accessing external symbols
  section 1914 3024 ffi.cdef(def)
  section 3024 3911 ffi.c
  section 3911 4747 clib = ffi.load(name [,global])
  section 4747 4909 creating cdata objects
  section 4909 6154 cdata = ffi.new(ct [,nelem] [,init...])
  section 6154 6354 ctype = ffi.typeof(ct)
  section 6354 6675 cdata = ffi.cast(ct, init)
  section 6675 7717 ctype = ffi.metatype(ct, metatable)
  section 7717 8618 cdata = ffi.gc(cdata, finalizer)
  section 8618 8759 c type information
  section 8759 8981 size = ffi.sizeof(ct [,nelem])
  section 8981 9076 align = ffi.alignof(ct)
  section 9076 9312 ofs [,bpos,bsize] = ffi.offsetof(ct, field)
  section 9312 9860 status = ffi.istype(ct, obj)
  section 9860 9886 utility functions
  section 9886 10850 err = ffi.errno([newerr])
  section 10850 11866 str = ffi.string(ptr [,len])
  section 11866 12507 ffi.copy(dst, src, len)
  section 12507 12847 ffi.fill(dst, len [,c])
  section 12847 12883 target-specific information
  section 12883 13452 status = ffi.abi(param)
  section 13452 13528 ffi.os
  section 13528 13618 ffi.arch
  section 13618 13700 methods for callbacks
  section 13700 13976 cb:free()
  section 13976 14288 cb:set(func)
  section 14288 14421 extended standard library functions
  section 14421 14644 n = tonumber(cdata)
  section 14644 15076 s = tostring(cdata)
  section 15076 15226 iter, obj, start = pairs(cdata)
  section 15226 16456 extensions to the lua parser

module ext_ffi_semantics
  section 14 41315 ffi semantics
  section 43 66 luajit
  section 66 96 download e<rchevron>
  section 96 118 installation
  section 118 142 running
  section 142 169 extensions
  section 169 197 ffi library
  section 197 219 ffi tutorial
  section 219 238 ffi.* api
  section 238 268 ffi semantics
  section 268 291 jit.* library
  section 291 310 lua/c api
  section 310 335 profiler
  section 335 358 status
  section 358 382 changes
  section 382 395 faq
  section 395 428 performance e<rchevron>
  section 428 454 wiki e<rchevron>
  section 454 1241 mailing list e<rchevron>
  section 1241 5144 c language support
  section 1989 2051 the \e escape in character and string literals.
  section 2051 2134 the c99/c++ boolean type, declared with the keywords bool or
  section 2134 2214 complex numbers, declared with the keywords complex or
  section 2214 2306 two complex number types: complex (aka complex double)
  section 2306 2388 vector types, declared with the gcc mode or vector_size
  section 2388 2476 unnamed (transparent) struct/union fields inside a
  section 2476 2566 incomplete enum declarations, handled like incomplete
  section 2566 2741 unnamed enum fields inside a struct/union. this is
  section 2741 2826 scoped static const declarations inside a struct/union
  section 2826 2983 zero-length arrays ([0]), empty struct/union,
  section 2983 3025 c++ reference types (int &x).
  section 3025 3090 alternate gcc keywords with __, e.g. __const__.
  section 3090 3247 gcc __attribute__ with the following attributes: aligned,
  section 3247 3326 the gcc __extension__ keyword and the gcc __alignof__
  section 3326 3412 gcc __asm__(symname) symbol name redirection for function
  section 3412 3509 msvc keywords for fixed-length types: __int8, __int16,
  section 3509 3648 msvc __cdecl, __fastcall, __stdcall, __thiscall,
  section 3648 3839 all other gcc/msvc-specific attributes are ignored.
  section 3839 3918 vararg handling: va_list, __builtin_va_list,
  section 3918 3992 from <stddef.h>: ptrdiff_t, size_t,
  section 3992 4154 from <stdint.h>: int8_t, int16_t, int32_t,
  section 4154 4512 from <unistd.h> (posix): ssize_t.
  section 4512 4608 a declaration must always have a type specifier; it doesnt
  section 4608 4852 old-style empty function declarations (k&r) are not allowed.
  section 4852 4995 the long double c type is parsed correctly, but theres no
  section 4995 5069 wide character strings and character literals are not
  section 5069 5144 see below for features that are currently not implemented.
  section 5144 5176 c type conversion rules
  section 5176 6270 conversions from c types to lua objects
  section 6270 7745 conversions from lua objects to c types
  section 7745 9302 conversions between c types
  section 9302 10621 conversions for vararg c function arguments
  section 10621 12327 initializers
  section 10865 10942 if no initializers are given, the object is filled with zero
  section 10942 11066 scalar types (numbers and pointers) accept a single
  section 11066 11224 valarrays (complex numbers and vectors) are treated like
  section 11224 11408 aggregate types (arrays and structs) accept either a single
  section 11408 11696 the elements of an array are initialized, starting at index
  section 11696 11883 byte arrays may also be initialized with a lua string. this
  section 11883 12018 the fields of a struct are initialized in the order of their
  section 12018 12106 only the first field of a union can be initialized with a
  section 12106 12275 elements or fields which are aggregates themselves are
  section 12275 12327 excess initializers cause an error.
  section 12327 15572 table initializers
  section 12459 12593 if the table index [0] is non-nil, then the table is
  section 12593 12803 array elements, starting at index zero, are initialized
  section 12803 12979 if exactly one array element was initialized, its repeated for
  section 12979 13215 the above logic only applies to arrays with a known fixed size.
  section 13215 13467 a struct/union can be initialized in the order of the
  section 13467 13701 otherwise, if neither index [0] nor [1] is present, a
  section 13701 13812 uninitialized fields of a struct are filled with zero bytes,
  section 13812 13968 initialization of a union stops after one field has been
  section 13968 14146 elements or fields which are aggregates themselves are
  section 14146 15572 excess initializers for an array cause an error. excess
  section 15572 16172 operations on cdata objects
  section 16172 19054 indexing a cdata object
  section 16211 16717 indexing a pointer/array: a cdata pointer/array can be
  section 16717 17334 dereferencing a struct/union field: a cdata
  section 17334 17891 indexing a complex number: a complex number can be indexed
  section 17891 19054 indexing a vector: a vector is treated like an array for
  section 19054 20023 calling a cdata object
  section 19092 19472 constructor: a ctype object can be called and used as a
  section 19472 20023 c function call: a cdata function or cdata function pointer
  section 20023 22342 arithmetic on cdata objects
  section 20066 20426 pointer arithmetic: a cdata pointer/array and a cdata number
  section 20426 20667 pointer difference: two compatible cdata pointers/arrays can
  section 20667 21708 64 bit integer arithmetic: the standard arithmetic operators
  section 21708 22342 64 bit bitwise operations: the rules for 64 bit arithmetic
  section 22342 23381 comparisons of cdata objects
  section 22386 22632 pointer comparison: two compatible cdata pointers/arrays can
  section 22632 23139 64 bit integer comparison: two cdata numbers, or a cdata
  section 23139 23381 comparisons for equality/inequality never raise an error.
  section 23381 25164 cdata objects as table keys
  section 24309 24637 if you can get by with the precision of lua numbers (52 bits),
  section 24637 24877 otherwise use either tostring() on 64 bit integers or
  section 24877 25164 create your own specialized hash table implementation using the
  section 25164 26879 parameterized types
  section 26879 28796 garbage collection of cdata objects
  section 28796 30710 callbacks
  section 30710 32568 callback resource handling
  section 32568 34035 callback performance
  section 34035 36550 c library namespaces
  section 34997 35100 external functions: a cdata object with the type of the
  section 35100 35228 external variables: the symbol address is dereferenced and the
  section 35228 35407 constant values (static const or enum constants): the
  section 35407 35542 external variables: the value to be written is converted to the
  section 35542 36550 writing to constant variables or to any other symbol type
  section 36550 38419 no hand-holding!
  section 38419 41315 current status
  section 38633 38704 c declarations are not passed through a c pre-processor, yet.
  section 38704 38915 the c parser is able to evaluate most constant expressions
  section 38915 39074 static const declarations only work for integer types up to
  section 39074 39163 packed struct bitfields that cross container boundaries are
  section 39163 39345 native vector types may be defined with the gcc mode or
  section 39345 39424 the volatile type qualifier is currently ignored by compiled
  section 39424 39966 ffi.cdef silently ignores most re-declarations. note: avoid
  section 39966 40014 bitfield accesses and initializations.
  section 40014 40042 vector operations.
  section 40042 40071 table initializers.
  section 40071 40131 initialization of nested struct/union types.
  section 40131 40240 non-default initialization of vla/vls or large c types (>
  section 40240 40294 conversions from lightuserdata to void *.
  section 40294 40370 pointer differences for element sizes that are not a power of
  section 40370 40445 calls to c functions with aggregates passed or returned by
  section 40445 40512 calls to ctype metamethods which are not plain functions.
  section 40512 40599 ctype __newindex tables and non-string lookups in ctype
  section 40599 40639 tostring() for cdata types.
  section 40639 40748 calls to ffi.cdef(), ffi.load() and ffi.metatype().
  section 40748 40792 arithmetic for complex numbers.
  section 40792 40849 passing structs by value to vararg c functions.
  section 40849 41315 c++ exception interoperability does not extend to c functions

module ext_ffi_tutorial
  section 14 18772 ffi tutorial
  section 42 65 luajit
  section 65 95 download e<rchevron>
  section 95 117 installation
  section 117 141 running
  section 141 168 extensions
  section 168 196 ffi library
  section 196 218 ffi tutorial
  section 218 237 ffi.* api
  section 237 267 ffi semantics
  section 267 290 jit.* library
  section 290 309 lua/c api
  section 309 334 profiler
  section 334 357 status
  section 357 381 changes
  section 381 394 faq
  section 394 427 performance e<rchevron>
  section 427 453 wiki e<rchevron>
  section 453 793 mailing list e<rchevron>
  section 793 1452 loading the ffi library
  section 1452 4875 accessing standard system functions
  section 4875 10338 accessing the zlib compression library
  section 10338 13536 defining metamethods for a c type
  section 13536 14742 translating c idioms
  section 14742 18772 to cache or not to cache

module ext_jit
  section 14 4311 jit.* library
  section 46 69 luajit
  section 69 99 download e<rchevron>
  section 99 121 installation
  section 121 145 running
  section 145 172 extensions
  section 172 200 ffi library
  section 200 222 ffi tutorial
  section 222 241 ffi.* api
  section 241 271 ffi semantics
  section 271 294 jit.* library
  section 294 313 lua/c api
  section 313 338 profiler
  section 338 361 status
  section 361 385 changes
  section 385 398 faq
  section 398 431 performance e<rchevron>
  section 431 457 wiki e<rchevron>
  section 457 733 mailing list e<rchevron>
  section 733 901 jit.on()
  section 901 967 jit.flush()
  section 967 1979 jit.on(func|true [,true|false])
  section 1979 2193 jit.flush(tr)
  section 2193 2455 status, ... = jit.status()
  section 2455 2515 jit.version
  section 2515 2653 jit.version_num
  section 2653 2755 jit.os
  section 2755 2872 jit.arch
  section 2872 3357 jit.opt.* e<mdash> jit compiler optimization control
  section 3357 4311 jit.util.* e<mdash> jit compiler introspection

module ext_profiler
  section 14 10462 profiler
  section 38 61 luajit
  section 61 91 download e<rchevron>
  section 91 113 installation
  section 113 137 running
  section 137 164 extensions
  section 164 192 ffi library
  section 192 214 ffi tutorial
  section 214 233 ffi.* api
  section 233 263 ffi semantics
  section 263 286 jit.* library
  section 286 305 lua/c api
  section 305 330 profiler
  section 330 353 status
  section 353 377 changes
  section 377 390 faq
  section 390 423 performance e<rchevron>
  section 423 449 wiki e<rchevron>
  section 449 720 mailing list e<rchevron>
  section 720 805 the bundled high-level profiler, invoked by the -jp command
  section 805 859 a low-level lua api to control the profiler.
  section 859 918 a low-level c api to control the profiler.
  section 918 1882 high-level profiler
  section 1882 4845 -jp=[options[,output]]
  section 2208 2307 f e<mdash> stack dump: function name, otherwise module:line.
  section 2307 2371 f e<mdash> stack dump: ditto, but dump module:name.
  section 2371 2419 l e<mdash> stack dump: module:line.
  section 2419 2511 <number> e<mdash> stack dump depth (callee e<larr>
  section 2511 2600 -<number> e<mdash> inverse stack dump depth (caller
  section 2600 2706 s e<mdash> split stack dump after first stack level. implies
  section 2706 2762 p e<mdash> show full path for module names.
  section 2762 2801 v e<mdash> show vm states.
  section 2801 2836 z e<mdash> show zones.
  section 2836 2910 r e<mdash> show raw sample counts. default: show
  section 2910 2975 a e<mdash> annotate excerpts from source code files.
  section 2975 3035 a e<mdash> annotate complete source code files.
  section 3035 3107 g e<mdash> produce raw output suitable for graphical tools.
  section 3107 3198 m<number> e<mdash> minimum sample percentage to be
  section 3198 4845 i<number> e<mdash> sampling interval in
  section 4845 5598 jit.zone e<mdash> zones
  section 5203 5267 zone(name) pushes a named zone to the zone stack.
  section 5267 5350 zone() pops the current zone from the zone stack and returns
  section 5350 5414 zone:get() returns the current zone name or nil.
  section 5414 5598 zone:flush() flushes the zone stack.
  section 5598 6256 low-level lua api
  section 6256 7420 profile.start(mode, cb) e<mdash> start profiler
  section 6408 6482 f e<mdash> profile with precision down to the function
  section 6482 6552 l e<mdash> profile with precision down to the line level.
  section 6552 7420 i<number> e<mdash> sampling interval in milliseconds
  section 7420 7504 profile.stop() e<mdash> stop profiler
  section 7504 8686 dump = profile.dumpstack([thread,] fmt, depth) e<mdash> dump
  section 7767 7869 p e<mdash> preserve the full path for module names.
  section 7869 7964 f e<mdash> dump the function name if it can be derived.
  section 7964 8016 f e<mdash> ditto, but dump module:name.
  section 8016 8057 l e<mdash> dump module:line.
  section 8057 8136 z e<mdash> zap the following characters for the last dumped
  section 8136 8686 all other characters are added verbatim to the output string.
  section 8686 8852 low-level c api
  section 8852 9514 luajit_profile_start(l, mode, cb, data) e<mdash> start
  section 9514 9606 luajit_profile_stop(l) e<mdash> stop profiler
  section 9606 10462 p = luajit_profile_dumpstack(l, fmt, depth, len) e<mdash>

module extensions
  section 14 12208 extensions
  section 40 63 luajit
  section 63 93 download e<rchevron>
  section 93 115 installation
  section 115 139 running
  section 139 166 extensions
  section 166 194 ffi library
  section 194 216 ffi tutorial
  section 216 235 ffi.* api
  section 235 265 ffi semantics
  section 265 288 jit.* library
  section 288 307 lua/c api
  section 307 332 profiler
  section 332 355 status
  section 355 379 changes
  section 379 392 faq
  section 392 425 performance e<rchevron>
  section 425 451 wiki e<rchevron>
  section 451 1137 mailing list e<rchevron>
  section 1137 1219 extensions modules
  section 1219 1983 bit.* e<mdash> bitwise operations
  section 1983 2127 ffi.* e<mdash> ffi library
  section 2127 2253 jit.* e<mdash> jit compiler control
  section 2253 2330 c api extensions
  section 2330 2383 profiler
  section 2383 2427 enhanced standard library functions
  section 2427 2643 xpcall(f, err [,args...]) passes arguments
  section 2643 2898 loadfile() etc. handle utf-8 source code
  section 2898 3178 tostring() etc. canonicalize nan and e<plusmn>inf
  section 3178 3691 tonumber() etc. use builtin string to number conversion
  section 3691 4609 string.dump(f [,strip]) generates portable bytecode
  section 4609 4961 table.new(narray, nhash) allocates a pre-sized table
  section 4961 5621 table.clear(tab) clears a table
  section 5621 6260 enhanced prng for math.random()
  section 6260 6575 io.* functions handle 64 bit file offsets
  section 6575 6853 debug.* functions identify metamethods
  section 6853 7134 fully resumable vm
  section 7134 9639 extensions from lua 5.2
  section 7320 7356 goto and ::labels::.
  section 7356 7418 hex escapes \x3f and \* escape in strings.
  section 7418 7480 load(string|reader [, chunkname [,mode [,env]]]).
  section 7480 7532 loadstring() is an alias for load().
  section 7532 7579 loadfile(filename [,mode [,env]]).
  section 7579 7612 math.log(x [,base]).
  section 7612 7649 string.rep(s, n [,sep]).
  section 7649 7748 string.format(): %q reversible. %s checks
  section 7748 7794 string matching pattern %g added.
  section 7794 7821 io.read(*l).
  section 7821 7894 io.lines() and file:lines() process io.read() options.
  section 7894 7943 os.exit(status|true|false [,close]).
  section 7943 8003 package.searchpath(name, path [, sep [, rep]]).
  section 8003 8043 package.loadlib(name, *).
  section 8043 8125 debug.getinfo() returns nparams and isvararg for
  section 8125 8189 debug.getlocal() accepts function instead of level.
  section 8189 8279 debug.getlocal() and debug.setlocal() accept negative
  section 8279 8356 debug.getupvalue() and debug.setupvalue() handle c
  section 8356 8414 debug.upvalueid() and debug.upvaluejoin().
  section 8414 8450 command line option -e.
  section 8450 8609 command line checks __tostring for errors.
  section 8609 8678 goto is a keyword and not a valid variable name anymore.
  section 8678 8758 break can be placed anywhere. empty statements (;;) are
  section 8758 8813 __lt, __le are invoked for mixed types.
  section 8813 8873 __len for tables. rawlen() library function.
  section 8873 8947 pairs() and ipairs() check for __pairs and
  section 8947 9000 coroutine.running() returns two results.
  section 9000 9070 table.pack() and table.unpack() (same as unpack()).
  section 9070 9152 io.write() and file:write() return file handle instead of
  section 9152 9226 os.execute() and pipe:close() return detailed exit
  section 9226 9275 debug.setmetatable() returns object.
  section 9275 9337 debug.getuservalue() and debug.setuservalue().
  section 9337 9639 remove math.mod(), string.gfind().
  section 9639 9817 extensions from lua 5.3
  section 9725 9817 unicode escape \u{xx...} embeds the utf-8 encoding in
  section 9817 12208 c++ exception interoperability
  section 10382 10473 c++ exceptions can be caught on the lua side with pcall(),
  section 10473 10603 c++ exceptions will be converted to the generic lua error
  section 10603 10760 its safe to throw c++ exceptions across non-protected lua
  section 10760 10903 lua errors can be caught on the c++ side with catch(...).
  section 10903 11041 throwing lua errors across c++ frames is safe. c++ destructors
  section 11041 11132 c++ exceptions can be caught on the lua side with pcall(),
  section 11132 11262 c++ exceptions will be converted to the generic lua error
  section 11262 11414 c++ exceptions will be caught by non-protected lua frames and
  section 11414 11471 lua errors cannot be caught on the c++ side.
  section 11471 11597 throwing lua errors across c++ frames will not call c++
  section 11597 11666 its not safe to throw c++ exceptions across lua frames.
  section 11666 11727 c++ exceptions cannot be caught on the lua side.
  section 11727 11784 lua errors cannot be caught on the c++ side.
  section 11784 12208 throwing lua errors across c++ frames will not call c++

module faq
  section 14 5165 frequently asked questions (faq)
  section 62 85 luajit
  section 85 115 download e<rchevron>
  section 115 137 installation
  section 137 161 running
  section 161 188 extensions
  section 188 216 ffi library
  section 216 238 ffi tutorial
  section 238 257 ffi.* api
  section 257 287 ffi semantics
  section 287 310 jit.* library
  section 310 329 lua/c api
  section 329 354 profiler
  section 354 377 status
  section 377 401 changes
  section 401 414 faq
  section 414 447 performance e<rchevron>
  section 447 473 wiki e<rchevron>
  section 473 521 mailing list e<rchevron>
  section 521 583 q: where can i learn more about luajit and lua?
  section 583 665 the e<rchevron> luajit mailing list focuses on topics related
  section 665 744 the e<rchevron> luajit wiki gathers community resources about
  section 744 907 news about lua itself can be found at the e<rchevron> lua
  section 907 1046 the e<rchevron> main lua.org site has complete e<rchevron>
  section 1046 1157 the community-managed e<rchevron> lua wiki has information
  section 1157 1788 q: where can i learn more about the compiler technology used by
  section 1788 2158 q: why do i get this error: attempt to index global arg (a nil
  section 2158 2214 q: why do i get this error: bad fpu precision?
  section 2214 2274 q: i get weird behavior after initializing direct3d.
  section 2274 2974 q: some fpu operations crash after i load a delphi dll.
  section 2974 3498 q: sometimes ctrl-c fails to stop my lua program. why?
  section 3498 4054 q: why doesnt my favorite power-patch for lua apply against
  section 4054 4526 q: lua runs everywhere. why doesnt luajit support my cpu?
  section 4526 5165 q: when will feature x be added? when will the next version be

module install
  section 14 19764 installation
  section 42 65 luajit
  section 65 95 download e<rchevron>
  section 95 117 installation
  section 117 141 running
  section 141 168 extensions
  section 168 196 ffi library
  section 196 218 ffi tutorial
  section 218 237 ffi.* api
  section 237 267 ffi semantics
  section 267 290 jit.* library
  section 290 309 lua/c api
  section 309 334 profiler
  section 334 357 status
  section 357 381 changes
  section 381 394 faq
  section 394 427 performance e<rchevron>
  section 427 453 wiki e<rchevron>
  section 453 1372 mailing list e<rchevron>
  section 1372 1980 configuring luajit
  section 1580 1641 src/luaconf.h sets some configuration variables.
  section 1641 1714 makefile has settings for installing luajit (posix only).
  section 1714 1806 src/makefile has settings for compiling luajit under
  section 1806 1980 src/msvcbuild.bat has settings for compiling luajit with
  section 1980 2026 posix systems (linux, osx, *bsd etc.)
  section 2026 2555 prerequisites
  section 2555 3249 building luajit
  section 3249 3765 installing luajit
  section 3765 3789 windows systems
  section 3789 4410 prerequisites
  section 4410 4633 building with msvc
  section 4633 4968 building with the windows sdk
  section 4968 5292 building with mingw or cygwin
  section 5292 5742 installing luajit
  section 5742 12279 cross-compiling luajit
  section 5821 5904 host: this is your development system, usually based on a x64
  section 5904 5992 target: this is the target system you want luajit to run on,
  section 5992 6085 toolchain: this comprises a c compiler, linker, assembler and a
  section 6085 6196 host (or system) toolchain: this is the toolchain used to build
  section 6196 6453 cross-compile toolchain: this is the toolchain used to build
  section 6453 6527 yes, you need a toolchain for both your host and your
  section 6527 6604 both host and target architectures must have the same pointer
  section 6604 6833 e.g. if you want to cross-compile to a 32 bit target on a 64
  section 6833 7040 64 bit targets always require compilation on a 64 bit host.
  section 7040 7189 e.g. if youre compiling on a windows or osx host for embedded
  section 7189 7318 for a minimal target os, you may need to disable the built-in
  section 7318 8141 dont forget to specify the same target_sys for the install
  section 8141 8262 the best way to get consistent results is to specify the
  section 8262 8387 for a pre-built, generic toolchain add -mcpu=... or
  section 8387 8545 for arm its important to have the correct -mfloat-abi=...
  section 8545 12279 for mips its important to select a supported abi (o32 on
  section 12279 13966 cross-compiling for consoles
  section 13966 16552 embedding luajit
  section 14190 14602 its strongly suggested to build luajit separately using the
  section 14602 14775 if you want to load c modules compiled for plain lua with
  section 14775 15068 on posix systems you can either link to the shared library or
  section 15068 15331 since windows symbols are bound to a specific dll name, you
  section 15331 15790 if youre building a 64 bit application on osx which links
  section 15790 15886 heres a e<rchevron> simple example for embedding lua or luajit
  section 15886 16061 make sure you use lual_newstate. avoid using
  section 16061 16177 make sure you use lual_openlibs and not the old lua 5.0
  section 16177 16394 to change or extend the list of standard libraries to load,
  section 16394 16552 the bit.* module for bitwise operations is already built-in.
  section 16552 19764 hints for distribution maintainers
  section 17451 17634 prefix overrides the installation path and should usually be
  section 17634 17765 destdir is an absolute path which allows you to install to a
  section 17765 17885 multilib sets the architecture-specific library path
  section 17885 19764 have a look at the top-level makefile and src/makefile

module luajit-2.1
  section 14 2769 luajit
  section 36 59 luajit
  section 59 89 download e<rchevron>
  section 89 111 installation
  section 111 135 running
  section 135 162 extensions
  section 162 190 ffi library
  section 190 212 ffi tutorial
  section 212 231 ffi.* api
  section 231 261 ffi semantics
  section 261 284 jit.* library
  section 284 303 lua/c api
  section 303 328 profiler
  section 328 351 status
  section 351 375 changes
  section 375 388 faq
  section 388 421 performance e<rchevron>
  section 421 447 wiki e<rchevron>
  section 447 821 mailing list e<rchevron>
  section 821 1065 compatibility
  section 1065 2344 overview
  section 2344 2769 more ...

module running
  section 14 8059 running luajit
  section 44 67 luajit
  section 67 97 download e<rchevron>
  section 97 119 installation
  section 119 143 running
  section 143 170 extensions
  section 170 198 ffi library
  section 198 220 ffi tutorial
  section 220 239 ffi.* api
  section 239 269 ffi semantics
  section 269 292 jit.* library
  section 292 311 lua/c api
  section 311 336 profiler
  section 336 359 status
  section 359 383 changes
  section 383 396 faq
  section 396 429 performance e<rchevron>
  section 429 455 wiki e<rchevron>
  section 455 735 mailing list e<rchevron>
  section 735 1083 command line options
  section 1083 3561 -b[options] input output
  section 1211 1255 -l e<mdash> only list bytecode.
  section 1255 1319 -s e<mdash> strip debug info (this is the default).
  section 1319 1360 -g e<mdash> keep debug info.
  section 1360 1444 -n name e<mdash> set module name (default: auto-detect from
  section 1444 1535 -t type e<mdash> set output file type (default: auto-detect
  section 1535 1622 -a arch e<mdash> override architecture for object files
  section 1622 1697 -o os e<mdash> override os for object files (default:
  section 1697 1754 -e chunk e<mdash> use chunk string as input.
  section 1754 1940 - (a single minus sign) e<mdash> use stdin as input and/or
  section 1940 2002 c e<mdash> c source file, exported bytecode data.
  section 2002 2062 h e<mdash> c header file, static bytecode data.
  section 2062 2164 obj or o e<mdash> object file, exported bytecode data
  section 2164 2264 raw or any other extension e<mdash> raw bytecode file
  section 2264 2355 see also string.dump() for information on bytecode portability
  section 2355 2531 a file in raw bytecode format is auto-detected and can be
  section 2531 2670 to statically embed the bytecode of a module in your
  section 2670 2819 on most elf-based systems (e.g. linux) you need to explicitly
  section 2819 3561 require() tries to load embedded bytecode data from exported
  section 3561 4916 -j cmd[=arg[,arg...]]
  section 4024 4087 -jon e<mdash> turns the jit compiler on (default).
  section 4087 4169 -joff e<mdash> turns the jit compiler off (only use the
  section 4169 4240 -jflush e<mdash> flushes the whole cache of compiled code.
  section 4240 4331 -jv e<mdash> shows verbose information about the progress of
  section 4331 4422 -jdump e<mdash> dumps the code and structures used in
  section 4422 4916 -jp e<mdash> start the integrated profiler.
  section 4916 8059 -o[level]

module status
  section 14 1915 status
  section 36 59 luajit
  section 59 89 download e<rchevron>
  section 89 111 installation
  section 111 135 running
  section 135 162 extensions
  section 162 190 ffi library
  section 190 212 ffi tutorial
  section 212 231 ffi.* api
  section 231 261 ffi semantics
  section 261 284 jit.* library
  section 284 303 lua/c api
  section 303 328 profiler
  section 328 351 status
  section 351 375 changes
  section 375 388 faq
  section 388 421 performance e<rchevron>
  section 421 447 wiki e<rchevron>
  section 447 619 mailing list e<rchevron>
  section 619 1915 current status
  section 875 1108 there are some differences in implementation-defined
  section 1108 1304 the lua debug api is missing a couple of features (return
  section 1304 1915 currently some out-of-memory errors from on-trace code

dist array-var-nginx-module-0.05
  aliases ngx_array_var ngx_http_array_var_module
  modules array-var-nginx-module-0.05

module array-var-nginx-module-0.05
  aliases ngx_array_var
  section 18 247 name
  section 247 768 synopsis
  section 768 1305 description
  section 1305 7683 directives
  section 1327 2212 array_split
  section 2212 2960 array_join
  section 2960 4290 array_map
  section 4290 7683 array_map_op
  section 7683 9463 installation
  section 8879 9463 building as a dynamic module
  section 9463 10218 compatibility
  section 10218 10365 source repository
  section 10365 10515 getting involved
  section 10515 10614 author
  section 10614 12066 copyright & license
  section 12066 12302 see also

dist drizzle-nginx-module-0.1.9
  aliases ngx_drizzle ngx_http_drizzle_module
  modules drizzle-nginx-module-0.1.9

module drizzle-nginx-module-0.1.9
  aliases ngx_drizzle
  section 19 320 name
  section 320 465 version
  section 465 1704 synopsis
  section 1704 4351 description
  section 2566 3322 keepalive connection pool
  section 3322 4351 last insert id
  section 4351 12782 directives
  section 4373 6485 drizzle_server
  section 6485 7814 drizzle_keepalive
  section 7814 8507 drizzle_query
  section 8507 9195 drizzle_pass
  section 9195 9664 drizzle_connect_timeout
  section 9664 10155 drizzle_send_query_timeout
  section 10155 10672 drizzle_recv_cols_timeout
  section 10672 11191 drizzle_recv_rows_timeout
  section 11191 11518 drizzle_buffer_size
  section 11518 11851 drizzle_module_header
  section 11851 12782 drizzle_status
  section 12782 15137 variables
  section 12855 15137 $drizzle_thread_id
  section 15137 18598 output format
  section 16358 16926 rds header part
  section 16926 18163 rds body part
  section 17126 17551 columns
  section 17551 18163 rows
  section 17722 17816 row flag
  section 17816 18163 fields data
  section 18163 18598 rds buffer limitations
  section 18598 18817 status code
  section 18817 19353 caveats
  section 19353 20457 trouble shooting
  section 20457 20924 known issues
  section 20924 24049 installation
  section 24049 24970 compatibility
  section 24970 25257 community
  section 24991 25127 english mailing list
  section 25127 25257 chinese mailing list
  section 25257 25552 report bugs
  section 25552 25694 source repository
  section 25694 26357 test suite
  section 26357 27667 todo
  section 27667 27833 changes
  section 27833 28121 authors
  section 28121 29797 copyright & license
  section 29797 30554 see also

dist echo-nginx-module-0.60
  aliases ngx_echo ngx_http_echo_module
  modules echo-nginx-module-0.60

module echo-nginx-module-0.60
  aliases ngx_echo
  section 18 269 name
  section 269 406 version
  section 406 4556 synopsis
  section 4556 6736 description
  section 6736 32883 content handler directives
  section 8244 10706 echo
  section 10706 12076 echo_duplicate
  section 12076 14036 echo_flush
  section 14036 14887 echo_sleep
  section 14887 15440 echo_blocking_sleep
  section 15440 16670 echo_reset_timer
  section 16670 18557 echo_read_request_body
  section 18557 21789 echo_location_async
  section 21789 24071 echo_location
  section 24071 26838 echo_subrequest_async
  section 26838 27534 echo_subrequest
  section 27534 29523 echo_foreach_split
  section 29523 29828 echo_end
  section 29828 30633 echo_request_body
  section 30633 32130 echo_exec
  section 32130 32883 echo_status
  section 32883 35587 filter directives
  section 33133 34527 echo_before_body
  section 34527 35587 echo_after_body
  section 35587 40049 variables
  section 35608 35725 $echo_it
  section 35725 36210 $echo_timer_elapsed
  section 36210 36466 $echo_request_body
  section 36466 37093 $echo_request_method
  section 37093 37431 $echo_client_request_method
  section 37431 38316 $echo_client_request_headers
  section 38316 38607 $echo_cacheable_request_uri
  section 38607 39167 $echo_request_uri
  section 39167 39788 $echo_incr
  section 39788 40049 $echo_response_status
  section 40049 41671 installation
  section 41671 43093 compatibility
  section 43093 43833 modules that use this module for testing
  section 43833 44120 community
  section 43854 43990 english mailing list
  section 43990 44120 chinese mailing list
  section 44120 44589 report bugs
  section 44589 44726 source repository
  section 44726 44888 changes
  section 44888 45965 test suite
  section 45965 48278 todo
  section 48278 48434 getting involved
  section 48434 48652 author
  section 48652 50116 copyright & license
  section 50116 50562 see also

dist encrypted-session-nginx-module-0.06
  aliases ngx_encrypted_session ngx_http_encrypted_session_module
  modules encrypted-session-nginx-module-0.06

module encrypted-session-nginx-module-0.06
  aliases ngx_encrypted_session
  section 18 237 name
  section 237 1194 synopsis
  section 1194 2200 description
  section 2200 4895 directives
  section 2222 2519 encrypted_session_key
  section 2519 2856 encrypted_session_iv
  section 2856 3982 encrypted_session_expires
  section 3982 4623 set_encrypt_session
  section 4623 4895 set_decrypt_session
  section 4895 6787 installation
  section 6195 6787 building as a dynamic module
  section 6787 7606 compatibility
  section 7606 8076 report bugs
  section 8076 8238 source repository
  section 8238 8388 getting involved
  section 8388 8470 author
  section 8470 9923 copyright & license
  section 9923 10098 see also

dist form-input-nginx-module-0.12
  aliases ngx_form_input ngx_http_form_input_module
  modules form-input-nginx-module-0.12

module form-input-nginx-module-0.12
  aliases ngx_form_input
  section 18 442 name
  section 442 1791 installation
  section 1206 1791 building as a dynamic module
  section 1791 2722 usage
  section 2722 3156 limitations
  section 3156 3583 compatibility
  section 3583 5109 copyright & license

dist headers-more-nginx-module-0.31
  aliases ngx_headers_more ngx_http_headers_more_filter_module
  modules headers-more-nginx-module-0.31

module headers-more-nginx-module-0.31
  aliases ngx_headers_more
  section 18 359 name
  section 359 1385 synopsis
  section 1385 2999 description
  section 2999 7993 directives
  section 3021 5550 more_set_headers
  section 5550 6395 more_clear_headers
  section 6395 7429 more_set_input_headers
  section 7429 7993 more_clear_input_headers
  section 7993 8903 limitations
  section 8903 10145 installation
  section 10145 11302 compatibility
  section 11302 11589 community
  section 11323 11459 english mailing list
  section 11459 11589 chinese mailing list
  section 11589 11856 bugs and patches
  section 11856 12009 source repository
  section 12009 12171 changes
  section 12171 13452 test suite
  section 13452 13535 todo
  section 13535 13691 getting involved
  section 13691 14001 authors
  section 14001 15700 copyright & license
  section 15700 16488 see also

dist iconv-nginx-module-0.14
  aliases ngx_iconv ngx_http_iconv_module
  modules iconv-nginx-module-0.14

module iconv-nginx-module-0.14
  aliases ngx_iconv
  section 19 242 name
  section 242 1141 usage
  section 257 455 set_iconv
  section 455 585 iconv_buffer_size
  section 585 1141 iconv_filter
  section 1141 1604 compatibility
  section 1604 2700 installation
  section 2120 2700 building as a dynamic module
  section 2700 4391 copyright & license
  section 4391 4542 changelog
  section 4542 4635 see also

dist lua-5.1.5

dist lua-cjson-2.1.0.4
  aliases cjson
  modules lua-cjson-2.1.0.4

module lua-cjson-2.1.0.4
  aliases cjson
  section 18 668 name
  section 668 2474 additions
  section 687 1103 encode_empty_table_as_object
  section 1103 1620 empty_array
  section 1620 2282 empty_array_mt
  section 2282 2474 encode_number_precision

dist luajit-2.1-20160517

dist lua-rds-parser-0.06
  aliases rds.parser

dist lua-redis-parser-0.12
  aliases redis.parser
  modules lua-redis-parser-0.12

module lua-redis-parser-0.12
  aliases redis.parser
  section 18 244 name
  section 244 727 description
  section 727 4768 functions
  section 984 2125 parse_reply
  section 2125 3011 parse_replies
  section 3011 3627 typename
  section 3627 4768 build_query
  section 4768 5226 constants
  section 4789 4848 bad_reply
  section 4848 4915 integer_reply
  section 4915 4978 error_reply
  section 4978 5043 status_reply
  section 5043 5104 bulk_reply
  section 5104 5177 multi_bulk_reply
  section 5177 5226 null
  section 5226 5428 background
  section 5428 5875 report bugs
  section 5875 6005 source repository
  section 6005 6956 installation
  section 6029 6332 build requirements
  section 6332 6413 linux/bsd/solaris
  section 6413 6956 mac os x
  section 6956 7064 author
  section 7064 8541 copyright & license
  section 8541 8884 see also

dist lua-resty-core-0.1.8
  aliases resty.core
  modules lua-resty-core-0.1.8 ngx.balancer ngx.ocsp ngx.semaphore ngx.ssl ngx.ssl.session

module lua-resty-core-0.1.8
  aliases resty.core
  section 18 161 name
  section 161 609 synopsis
  section 609 1517 description
  section 1517 1858 prerequisites
  section 1858 7229 api implemented
  section 1885 2170 resty.core.hash
  section 2170 2405 resty.core.base64
  section 2405 2629 resty.core.uri
  section 2629 2999 resty.core.regex
  section 2999 3120 resty.core.exit
  section 3120 4187 resty.core.shdict
  section 4187 4322 resty.core.var
  section 4322 4440 resty.core.ctx
  section 4440 5219 resty.core.request
  section 5219 5361 resty.core.response
  section 5361 5672 resty.core.misc
  section 5672 5867 resty.core.time
  section 5867 6272 resty.core.worker
  section 6272 6557 ngx.semaphore
  section 6557 6744 ngx.balancer
  section 6744 6996 ngx.ssl
  section 6996 7229 ngx.ssl.session
  section 7229 7456 caveat
  section 7456 7712 todo
  section 7712 7811 author
  section 7811 9266 copyright and license
  section 9266 9438 see also

module ngx.balancer
  section 18 160 name
  section 160 1496 synopsis
  section 1496 1961 description
  section 1961 6091 methods
  section 2114 2849 set_current_peer
  section 2849 3885 set_more_tries
  section 3885 5050 get_last_failure
  section 5050 6091 set_timeouts
  section 6091 6378 community
  section 6112 6248 english mailing list
  section 6248 6378 chinese mailing list
  section 6378 6629 bugs and patches
  section 6629 6716 author
  section 6716 8166 copyright and license
  section 8166 8512 see also

module ngx.ocsp
  section 18 167 name
  section 167 3745 synopsis
  section 3745 4242 description
  section 4242 7423 methods
  section 4259 5077 get_ocsp_responder_from_der_chain
  section 5077 6067 create_ocsp_request
  section 6067 6739 validate_ocsp_response
  section 6739 7423 set_ocsp_status_resp
  section 7423 7710 community
  section 7444 7580 english mailing list
  section 7580 7710 chinese mailing list
  section 7710 7961 bugs and patches
  section 7961 8048 author
  section 8048 9498 copyright and license
  section 9498 9899 see also

module ngx.semaphore
  section 18 152 name
  section 152 2837 synopsis
  section 170 1347 synchronizing threads in the same context
  section 1347 2837 synchronizing threads in different contexts
  section 2837 4093 description
  section 4093 8121 methods
  section 4112 4889 new
  section 4889 5714 post
  section 5714 6977 wait
  section 6977 8121 count
  section 8121 8408 community
  section 8142 8278 english mailing list
  section 8278 8408 chinese mailing list
  section 8408 8659 bugs and patches
  section 8659 8701 author
  section 8701 10151 copyright and license
  section 10151 10385 see also

module ngx.ssl
  section 18 156 name
  section 156 2238 synopsis
  section 2238 3036 description
  section 3036 10445 methods
  section 3053 3348 clear_certs
  section 3348 4190 cert_pem_to_der
  section 4190 4755 set_der_cert
  section 4755 5311 priv_key_pem_to_der
  section 5311 5874 set_der_priv_key
  section 5874 6685 server_name
  section 6685 8242 raw_server_addr
  section 8242 8677 get_tls1_version
  section 8677 9247 parse_pem_cert
  section 9247 9681 parse_pem_priv_key
  section 9681 10061 set_cert
  section 10061 10445 set_priv_key
  section 10445 10732 community
  section 10466 10602 english mailing list
  section 10602 10732 chinese mailing list
  section 10732 10983 bugs and patches
  section 10983 11070 author
  section 11070 12520 copyright and license
  section 12520 12923 see also

module ngx.ssl.session
  section 18 196 name
  section 196 4119 synopsis
  section 4119 4784 description
  section 4784 7208 methods
  section 4801 5422 get_session_id
  section 5422 6442 get_serialized_session
  section 6442 7208 set_serialized_session
  section 7208 7495 community
  section 7229 7365 english mailing list
  section 7365 7495 chinese mailing list
  section 7495 7746 bugs and patches
  section 7746 7833 author
  section 7833 9283 copyright and license
  section 9283 9781 see also

dist lua-resty-dns-0.17
  aliases resty.dns
  modules lua-resty-dns-0.17

module lua-resty-dns-0.17
  aliases resty.dns
  section 18 156 name
  section 156 839 description
  section 839 2165 synopsis
  section 2165 9702 methods
  section 2184 3633 new
  section 3633 7128 query
  section 7128 7882 tcp_query
  section 7882 8049 set_timeout
  section 8049 8479 compress_ipv6_addr
  section 8479 8894 expand_ipv6_addr
  section 8894 9433 arpa_str
  section 9433 9702 reverse_query
  section 9702 11223 constants
  section 9723 9807 type_a
  section 9807 9893 type_ns
  section 9893 9985 type_cname
  section 9985 10074 type_ptr
  section 10074 10161 type_mx
  section 10161 10250 type_txt
  section 10250 10371 type_aaaa
  section 10371 10516 type_srv
  section 10516 10661 type_spf
  section 10661 10785 class_in
  section 10785 10926 section_an
  section 10926 11074 section_ns
  section 11074 11223 section_ar
  section 11223 11770 automatic error logging
  section 11770 12570 limitations
  section 12570 12720 todo
  section 12720 12819 author
  section 12819 14314 copyright and license
  section 14314 14697 see also

dist lua-resty-lock-0.04
  aliases resty.lock
  modules lua-resty-lock-0.04

module lua-resty-lock-0.04
  aliases resty.lock
  section 18 162 name
  section 162 1117 synopsis
  section 1117 1617 description
  section 1617 5791 methods
  section 2030 3885 new
  section 3885 5488 lock
  section 5488 5791 unlock
  section 5791 6147 for multiple lua light threads
  section 6147 10189 for cache locks
  section 10189 10351 prerequisites
  section 10351 11315 installation
  section 11315 11606 todo
  section 11606 11893 community
  section 11627 11763 english mailing list
  section 11763 11893 chinese mailing list
  section 11893 12143 bugs and patches
  section 12143 12242 author
  section 12242 13697 copyright and license
  section 13697 13852 see also

dist lua-resty-lrucache-0.04
  aliases resty.lrucache
  modules lua-resty-lrucache-0.04

module lua-resty-lrucache-0.04
  aliases resty.lrucache
  section 18 177 name
  section 177 1297 synopsis
  section 1297 3375 description
  section 3375 5387 methods
  section 3864 4580 new
  section 4580 4999 set
  section 4999 5285 get
  section 5285 5387 delete
  section 5387 5549 prerequisites
  section 5549 6477 installation
  section 6477 6664 todo
  section 6664 6951 community
  section 6685 6821 english mailing list
  section 6821 6951 chinese mailing list
  section 6951 7203 bugs and patches
  section 7203 7332 author
  section 7332 8845 copyright and license
  section 8845 9001 see also

dist lua-resty-memcached-0.14
  aliases resty.memcached
  modules lua-resty-memcached-0.14

module lua-resty-memcached-0.14
  aliases resty.memcached
  section 18 173 name
  section 173 573 description
  section 573 3012 synopsis
  section 3012 13803 methods
  section 3192 3771 new
  section 3771 4261 connect
  section 4261 4838 set
  section 4838 5084 set_timeout
  section 5084 5808 set_keepalive
  section 5808 6388 get_reused_times
  section 6388 6610 close
  section 6610 7273 add
  section 7273 7948 replace
  section 7948 8634 append
  section 8634 9325 prepend
  section 9325 10416 get
  section 10416 10736 gets
  section 10736 11049 cas
  section 11049 11302 touch
  section 11302 11644 flush_all
  section 11644 11907 delete
  section 11907 12197 incr
  section 12197 12487 decr
  section 12487 12956 stats
  section 12956 13146 version
  section 13146 13486 quit
  section 13486 13803 verbosity
  section 13803 14303 automatic error logging
  section 14303 15083 limitations
  section 15083 15232 todo
  section 15232 15331 author
  section 15331 16826 copyright and license
  section 16826 17221 see also

dist lua-resty-mysql-0.16
  aliases resty.mysql
  modules lua-resty-mysql-0.16

module lua-resty-mysql-0.16
  aliases resty.mysql
  section 18 161 name
  section 161 724 description
  section 724 4835 synopsis
  section 4835 12025 methods
  section 4854 5010 new
  section 5010 7071 connect
  section 7071 7224 set_timeout
  section 7224 7947 set_keepalive
  section 7947 8525 get_reused_times
  section 8525 8741 close
  section 8741 9082 send_query
  section 9082 11057 read_result
  section 11057 11479 query
  section 11479 11713 server_ver
  section 11713 12025 set_compact_arrays
  section 12025 12483 sql literal quoting
  section 12483 14361 multi-resultset support
  section 14361 14774 debugging
  section 14774 15274 automatic error logging
  section 15274 16056 limitations
  section 16056 16812 installation
  section 16812 17099 community
  section 16833 16969 english mailing list
  section 16969 17099 chinese mailing list
  section 17099 17406 bugs and patches
  section 17406 17738 todo
  section 17738 17837 author
  section 17837 19332 copyright and license
  section 19332 19800 see also

dist lua-resty-redis-0.25
  aliases resty.redis
  modules lua-resty-redis-0.25

module lua-resty-redis-0.25
  aliases resty.redis
  section 18 165 name
  section 165 576 description
  section 576 3719 synopsis
  section 3719 13028 methods
  section 5867 6013 new
  section 6013 6869 connect
  section 6869 7023 set_timeout
  section 7023 7739 set_keepalive
  section 7739 8318 get_reused_times
  section 8318 8535 close
  section 8535 9194 init_pipeline
  section 9194 9593 commit_pipeline
  section 9593 9899 cancel_pipeline
  section 9899 10256 hmset
  section 10256 10466 array_to_hash
  section 10466 12118 read_reply
  section 12118 13028 add_commands
  section 13028 14076 redis authentication
  section 14076 15417 redis transactions
  section 15417 16004 load balancing and failover
  section 16004 16396 debugging
  section 16396 16943 automatic error logging
  section 16943 19304 check list for issues
  section 19304 20191 limitations
  section 20191 20943 installation
  section 20943 20959 todo
  section 20959 21246 community
  section 20980 21116 english mailing list
  section 21116 21246 chinese mailing list
  section 21246 21495 bugs and patches
  section 21495 21594 author
  section 21594 23077 copyright and license
  section 23077 23455 see also

dist lua-resty-string-0.09
  aliases resty.string
  modules lua-resty-string-0.09

module lua-resty-string-0.09
  aliases resty.string
  section 18 254 name
  section 254 435 description
  section 435 4946 synopsis
  section 4946 5028 author
  section 5028 6523 copyright and license
  section 6523 6625 see also

dist lua-resty-upload-0.09
  aliases resty.upload
  modules lua-resty-upload-0.09

module lua-resty-upload-0.09
  aliases resty.upload
  section 18 178 name
  section 178 1373 description
  section 1373 5591 synopsis
  section 5591 5690 author
  section 5690 7185 copyright and license
  section 7185 7635 see also

dist lua-resty-upstream-healthcheck-0.04
  aliases resty.upstream.healthcheck
  modules lua-resty-upstream-healthcheck-0.04

module lua-resty-upstream-healthcheck-0.04
  aliases resty.upstream.healthcheck
  section 18 190 name
  section 190 2561 synopsis
  section 2561 2692 description
  section 2692 4275 methods
  section 2709 3240 spawn_checker
  section 3240 4275 status_page
  section 4275 5552 multiple upstreams
  section 5552 6533 installation
  section 6533 6549 todo
  section 6549 6836 community
  section 6570 6706 english mailing list
  section 6706 6836 chinese mailing list
  section 6836 7102 bugs and patches
  section 7102 7201 author
  section 7201 8656 copyright and license
  section 8656 8904 see also

dist lua-resty-websocket-0.05
  aliases resty.websocket
  modules lua-resty-websocket-0.05

module lua-resty-websocket-0.05
  aliases resty.websocket
  section 18 155 name
  section 155 596 description
  section 596 2709 synopsis
  section 2709 13641 modules
  section 2728 7218 resty.websocket.server
  section 2855 7218 methods
  section 2875 3917 new
  section 3917 4049 set_timeout
  section 4049 4342 send_text
  section 4342 4641 send_binary
  section 4641 5051 send_ping
  section 5051 5386 send_pong
  section 5386 5832 send_close
  section 5832 6459 send_frame
  section 6459 7218 recv_frame
  section 7218 13042 resty.websocket.client
  section 8254 13042 methods
  section 8274 9180 client:new
  section 9180 10607 client:connect
  section 10607 10792 client:close
  section 10792 11513 client:set_keepalive
  section 11513 11656 client:set_timeout
  section 11656 11808 client:send_text
  section 11808 11966 client:send_binary
  section 11966 12157 client:send_ping
  section 12157 12348 client:send_pong
  section 12348 12549 client:send_close
  section 12549 12887 client:send_frame
  section 12887 13042 client:recv_frame
  section 13042 13641 resty.websocket.protocol
  section 13175 13641 methods
  section 13195 13349 recv_frame
  section 13349 13488 build_frame
  section 13488 13641 send_frame
  section 13641 14141 automatic error logging
  section 14141 14935 limitations
  section 14935 16002 installation
  section 16002 16018 todo
  section 16018 16305 community
  section 16039 16175 english mailing list
  section 16175 16305 chinese mailing list
  section 16305 16604 bugs and patches
  section 16604 16703 author
  section 16703 18186 copyright and license
  section 18186 18807 see also

dist memc-nginx-module-0.17
  aliases ngx_memc ngx_http_memc_module
  modules memc-nginx-module-0.17

module memc-nginx-module-0.17
  aliases ngx_memc
  section 18 383 name
  section 383 2540 synopsis
  section 2540 4863 description
  section 3775 4484 keep-alive connections to memcached servers
  section 4484 4863 how it works
  section 4863 10338 memcached commands supported
  section 5618 6307 get $memc_key
  section 6307 7293 set $memc_key $memc_flags $memc_exptime $memc_value
  section 7293 7388 add $memc_key $memc_flags $memc_exptime $memc_value
  section 7388 7487 replace $memc_key $memc_flags $memc_exptime $memc_value
  section 7487 7754 append $memc_key $memc_flags $memc_exptime $memc_value
  section 7754 7856 prepend $memc_key $memc_flags $memc_exptime $memc_value
  section 7856 8304 delete $memc_key
  section 8304 8559 delete $memc_key $memc_exptime
  section 8559 9146 incr $memc_key $memc_value
  section 9146 9227 decr $memc_key $memc_value
  section 9227 9411 flush_all
  section 9411 9550 flush_all $memc_exptime
  section 9550 9957 stats
  section 9957 10338 version
  section 10338 14280 directives
  section 10750 11208 memc_pass
  section 11208 11729 memc_cmds_allowed
  section 11729 12080 memc_flags_to_last_modified
  section 12080 12549 memc_connect_timeout
  section 12549 13023 memc_send_timeout
  section 13023 13499 memc_read_timeout
  section 13499 13954 memc_buffer_size
  section 13954 14280 memc_ignore_client_abort
  section 14280 16124 installation
  section 15707 16124 for developers
  section 16124 17446 compatibility
  section 17446 17733 community
  section 17467 17603 english mailing list
  section 17603 17733 chinese mailing list
  section 17733 18236 report bugs
  section 18236 18372 source repository
  section 18372 18534 changes
  section 18534 19891 test suite
  section 19891 20064 todo
  section 20064 20220 getting involved
  section 20220 20438 author
  section 20438 22119 copyright & license
  section 22119 23391 see also

dist ngx_coolkit-0.2rc3
  aliases ngx_coolkit_module

dist ngx_devel_kit-0.3.0
  aliases ngx_devel_kit
  modules ngx_devel_kit-0.3.0

module ngx_devel_kit-0.3.0
  section 18 990 name
  section 990 1108 status
  section 1108 1458 features
  section 1458 1960 design
  section 1474 1652 modular
  section 1652 1960 auto-generated & easily extensible
  section 1960 2967 usage for users
  section 2451 2967 building as a dynamic module
  section 2967 4230 usage for developers
  section 3788 4230 warning: using ndk_all
  section 4230 4902 modules using ndk
  section 4902 5170 todo
  section 5170 6717 license
  section 6717 6971 contributing / feedback
  section 6971 7028 author

dist ngx_lua-0.10.6
  aliases ngx_http_lua_module
  modules .github.issue_template .github.pull_request_template ngx_lua-0.10.6

module .github.issue_template

module .github.pull_request_template

module ngx_lua-0.10.6
  section 19 221 name
  section 221 361 version
  section 361 4078 synopsis
  section 4078 7160 description
  section 7160 8737 typical uses
  section 8737 9101 nginx compatibility
  section 9101 13750 installation
  section 11142 11720 building as a dynamic module
  section 11720 13057 c macro configurations
  section 13057 13750 installation on ubuntu 11.10
  section 13750 14037 community
  section 13771 13907 english mailing list
  section 13907 14037 chinese mailing list
  section 14037 14206 code repository
  section 14206 14471 bugs and patches
  section 14471 16393 lua/luajit bytecode support
  section 16393 16800 system environment variable support
  section 16800 17892 http 1.0 support
  section 17892 21013 statically linking pure lua modules
  section 21013 24001 data sharing within an nginx worker
  section 24001 34412 known issues
  section 24025 24451 tcp socket connect operation issues
  section 24451 25690 lua coroutine yielding/resuming
  section 25690 28231 lua variable scope
  section 28231 29360 locations configured by subrequest directives of other modules
  section 29360 30158 cosockets not available everywhere
  section 30158 33313 special escaping sequences
  section 33313 33572 mixing with ssi not supported
  section 33572 33768 spdy mode not fully supported
  section 33768 34412 missing data on short circuited requests
  section 34412 36735 todo
  section 36735 36897 changes
  section 36897 39897 test suite
  section 39897 41481 copyright and license
  section 41481 43742 see also
  section 43742 116248 directives
  section 46338 46947 lua_use_default_type
  section 46947 48826 lua_code_cache
  section 48826 49859 lua_regex_cache_max_entries
  section 49859 50550 lua_regex_match_limit
  section 50550 51220 lua_package_path
  section 51220 51895 lua_package_cpath
  section 51895 55868 init_by_lua
  section 55868 56400 init_by_lua_block
  section 56400 56989 init_by_lua_file
  section 56989 58438 init_worker_by_lua
  section 58438 58999 init_worker_by_lua_block
  section 58999 59315 init_worker_by_lua_file
  section 59315 62391 set_by_lua
  section 62391 63153 set_by_lua_block
  section 63153 64378 set_by_lua_file
  section 64378 65160 content_by_lua
  section 65160 65716 content_by_lua_block
  section 65716 67275 content_by_lua_file
  section 67275 71514 rewrite_by_lua
  section 71514 72063 rewrite_by_lua_block
  section 72063 73434 rewrite_by_lua_file
  section 73434 76086 access_by_lua
  section 76086 76630 access_by_lua_block
  section 76630 77855 access_by_lua_file
  section 77855 78988 header_filter_by_lua
  section 78988 79566 header_filter_by_lua_block
  section 79566 80263 header_filter_by_lua_file
  section 80263 83839 body_filter_by_lua
  section 83839 84417 body_filter_by_lua_block
  section 84417 85107 body_filter_by_lua_file
  section 85107 87481 log_by_lua
  section 87481 88029 log_by_lua_block
  section 88029 88680 log_by_lua_file
  section 88680 91015 balancer_by_lua_block
  section 91015 91661 balancer_by_lua_file
  section 91661 93692 lua_need_request_body
  section 93692 97350 ssl_certificate_by_lua_block
  section 97350 98034 ssl_certificate_by_lua_file
  section 98034 100830 ssl_session_fetch_by_lua_block
  section 100830 101492 ssl_session_fetch_by_lua_file
  section 101492 102677 ssl_session_store_by_lua_block
  section 102677 103339 ssl_session_store_by_lua_file
  section 103339 104110 lua_shared_dict
  section 104110 104726 lua_socket_connect_timeout
  section 104726 105315 lua_socket_send_timeout
  section 105315 105550 lua_socket_send_lowat
  section 105550 106260 lua_socket_read_timeout
  section 106260 106802 lua_socket_buffer_size
  section 106802 107651 lua_socket_pool_size
  section 107651 108391 lua_socket_keepalive_timeout
  section 108391 108935 lua_socket_log_errors
  section 108935 109402 lua_ssl_ciphers
  section 109402 109749 lua_ssl_crl
  section 109749 110125 lua_ssl_protocols
  section 110125 110541 lua_ssl_trusted_certificate
  section 110541 110873 lua_ssl_verify_depth
  section 110873 111815 lua_http10_buffering
  section 111815 112290 rewrite_by_lua_no_postpone
  section 112290 112756 access_by_lua_no_postpone
  section 112756 113204 lua_transform_underscores_in_response_headers
  section 113204 115222 lua_check_client_abort
  section 115222 115686 lua_max_pending_timers
  section 115686 116248 lua_max_running_timers
  section 116248 310746 nginx api for lua
  section 120588 122226 introduction
  section 122226 123409 ngx.arg
  section 123409 125325 ngx.var.variable
  section 125325 126330 core constants
  section 126330 127433 http method constants
  section 127433 129938 http status constants
  section 129938 130475 nginx log level constants
  section 130475 131599 print
  section 131599 135226 ngx.ctx
  section 135226 146565 ngx.location.capture
  section 146565 148507 ngx.location.capture_multi
  section 148507 149069 ngx.status
  section 149069 151877 ngx.header.header
  section 151877 152514 ngx.resp.get_headers
  section 152514 153082 ngx.req.is_internal
  section 153082 153802 ngx.req.start_time
  section 153802 154227 ngx.req.http_version
  section 154227 155131 ngx.req.raw_header
  section 155131 155692 ngx.req.get_method
  section 155692 156261 ngx.req.set_method
  section 156261 158762 ngx.req.set_uri
  section 158762 159651 ngx.req.set_uri_args
  section 159651 162041 ngx.req.get_uri_args
  section 162041 164677 ngx.req.get_post_args
  section 164677 166902 ngx.req.get_headers
  section 166902 167934 ngx.req.set_header
  section 167934 168371 ngx.req.clear_header
  section 168371 170100 ngx.req.read_body
  section 170100 170658 ngx.req.discard_body
  section 170658 172134 ngx.req.get_body_data
  section 172134 173153 ngx.req.get_body_file
  section 173153 173810 ngx.req.set_body_data
  section 173810 174924 ngx.req.set_body_file
  section 174924 176923 ngx.req.init_body
  section 176923 178107 ngx.req.append_body
  section 178107 178954 ngx.req.finish_body
  section 178954 181062 ngx.req.socket
  section 181062 183379 ngx.exec
  section 183379 185363 ngx.redirect
  section 185363 185895 ngx.send_headers
  section 185895 186204 ngx.headers_sent
  section 186204 187774 ngx.print
  section 187774 187964 ngx.say
  section 187964 189172 ngx.log
  section 189172 190533 ngx.flush
  section 190533 192686 ngx.exit
  section 192686 194548 ngx.eof
  section 194548 195082 ngx.sleep
  section 195082 195523 ngx.escape_uri
  section 195523 196008 ngx.unescape_uri
  section 196008 197069 ngx.encode_args
  section 197069 198129 ngx.decode_args
  section 198129 198775 ngx.encode_base64
  section 198775 199254 ngx.decode_base64
  section 199254 200053 ngx.crc32_short
  section 200053 200853 ngx.crc32_long
  section 200853 202008 ngx.hmac_sha1
  section 202008 202657 ngx.md5
  section 202657 203152 ngx.md5_bin
  section 203152 203771 ngx.sha1_bin
  section 203771 204227 ngx.quote_sql_str
  section 204227 204752 ngx.today
  section 204752 205353 ngx.time
  section 205353 206082 ngx.now
  section 206082 206634 ngx.update_time
  section 206634 207245 ngx.localtime
  section 207245 207850 ngx.utctime
  section 207850 208491 ngx.cookie_time
  section 208491 209174 ngx.http_time
  section 209174 209832 ngx.parse_http_time
  section 209832 210152 ngx.is_subrequest
  section 210152 216918 ngx.re.match
  section 216918 219270 ngx.re.find
  section 219270 221678 ngx.re.gmatch
  section 221678 224479 ngx.re.sub
  section 224479 225644 ngx.re.gsub
  section 225644 227973 ngx.shared.dict
  section 227973 229250 ngx.shared.dict.get
  section 229250 230041 ngx.shared.dict.get_stale
  section 230041 233101 ngx.shared.dict.set
  section 233101 233857 ngx.shared.dict.safe_set
  section 233857 234697 ngx.shared.dict.add
  section 234697 235453 ngx.shared.dict.safe_add
  section 235453 236297 ngx.shared.dict.replace
  section 236297 236929 ngx.shared.dict.delete
  section 236929 238909 ngx.shared.dict.incr
  section 238909 240025 ngx.shared.dict.lpush
  section 240025 240652 ngx.shared.dict.rpush
  section 240652 241408 ngx.shared.dict.lpop
  section 241408 242163 ngx.shared.dict.rpop
  section 242163 242940 ngx.shared.dict.llen
  section 242940 243636 ngx.shared.dict.flush_all
  section 243636 244555 ngx.shared.dict.flush_expired
  section 244555 245542 ngx.shared.dict.get_keys
  section 245542 246327 ngx.socket.udp
  section 246327 248816 udpsock:setpeername
  section 248816 249595 udpsock:send
  section 249595 250958 udpsock:receive
  section 250958 251618 udpsock:close
  section 251618 252102 udpsock:settimeout
  section 252102 252334 ngx.socket.stream
  section 252334 254698 ngx.socket.tcp
  section 254698 257939 tcpsock:connect
  section 257939 260218 tcpsock:sslhandshake
  section 260218 261665 tcpsock:send
  section 261665 263982 tcpsock:receive
  section 263982 268434 tcpsock:receiveuntil
  section 268434 269323 tcpsock:close
  section 269323 270108 tcpsock:settimeout
  section 270108 270591 tcpsock:setoption
  section 270591 273004 tcpsock:setkeepalive
  section 273004 273812 tcpsock:getreusedtimes
  section 273812 274632 ngx.socket.connect
  section 274632 276390 ngx.get_phase
  section 276390 282589 ngx.thread.spawn
  section 282589 285539 ngx.thread.wait
  section 285539 286195 ngx.thread.kill
  section 286195 287987 ngx.on_abort
  section 287987 294633 ngx.timer.at
  section 294633 295148 ngx.timer.running_count
  section 295148 295653 ngx.timer.pending_count
  section 295653 296313 ngx.config.subsystem
  section 296313 296792 ngx.config.debug
  section 296792 297377 ngx.config.prefix
  section 297377 297917 ngx.config.nginx_version
  section 297917 298348 ngx.config.nginx_configure
  section 298348 298871 ngx.config.ngx_lua_version
  section 298871 299441 ngx.worker.exiting
  section 299441 300036 ngx.worker.pid
  section 300036 300589 ngx.worker.count
  section 300589 301277 ngx.worker.id
  section 301277 302204 ngx.semaphore
  section 302204 302843 ngx.balancer
  section 302843 303403 ngx.ssl
  section 303403 304151 ngx.ocsp
  section 304151 306769 ndk.set_var.directive
  section 306769 307498 coroutine.create
  section 307498 308246 coroutine.resume
  section 308246 308947 coroutine.yield
  section 308947 309584 coroutine.wrap
  section 309584 310164 coroutine.running
  section 310164 310746 coroutine.status
  section 310746 311027 obsolete sections
  section 310931 311027 special pcre sequences

dist ngx_lua_upstream-0.06
  aliases ngx_http_lua_upstream_module
  modules ngx_lua_upstream-0.06

module ngx_lua_upstream-0.06
  section 18 157 name
  section 157 2515 synopsis
  section 2515 6647 functions
  section 2536 2788 get_upstreams
  section 2788 3382 get_servers
  section 3382 4290 get_primary_peers
  section 4290 4532 get_backup_peers
  section 4532 5810 set_peer_down
  section 5810 6647 current_upstream_name
  section 6647 6752 todo
  section 6752 7083 compatibility
  section 7083 8705 installation
  section 8705 8804 author
  section 8804 10259 copyright and license
  section 10259 10549 see also

dist ngx_postgres-1.0rc7
  aliases ngx_postgres
  modules ngx_postgres-1.0rc7 todo

module ngx_postgres-1.0rc7
  section 18 255 about
  section 255 699 status
  section 699 5823 configuration directives
  section 733 967 postgres_server
  section 967 1596 postgres_keepalive
  section 1596 1869 postgres_pass
  section 1869 2273 postgres_query
  section 2273 3220 postgres_rewrite
  section 3220 4143 postgres_output
  section 4143 4811 postgres_set
  section 4811 5345 postgres_escape
  section 5345 5581 postgres_connect_timeout
  section 5581 5823 postgres_result_timeout
  section 5823 6191 configuration variables
  section 5856 5926 $postgres_columns
  section 5926 5990 $postgres_rows
  section 5990 6119 $postgres_affected
  section 6119 6191 $postgres_query
  section 6191 11113 sample configurations
  section 6222 6632 sample configuration #1
  section 6632 7156 sample configuration #2
  section 7156 7953 sample configuration #3
  section 7953 9011 sample configuration #4
  section 9011 10701 sample configuration #5
  section 10701 11113 sample configuration #6
  section 11113 11976 testing
  section 11976 13772 license
  section 13772 14119 see also

module todo

dist rds-csv-nginx-module-0.07
  aliases ngx_rds_csv ngx_http_rds_csv_filter_module
  modules rds-csv-nginx-module-0.07

module rds-csv-nginx-module-0.07
  aliases ngx_rds_csv
  section 18 188 name
  section 188 357 synopsis
  section 357 892 description
  section 892 2797 directives
  section 914 1103 rds_csv
  section 1103 1479 rds_csv_row_terminator
  section 1479 1846 rds_csv_field_separator
  section 1846 2117 rds_csv_field_name_header
  section 2117 2547 rds_csv_content_type
  section 2547 2797 rds_csv_buffer_size
  section 2797 3999 installation
  section 3999 4404 compatibility
  section 4404 4491 author
  section 4491 5964 copyright & license
  section 5964 6219 see also

dist rds-json-nginx-module-0.14
  aliases ngx_rds_json ngx_http_rds_json_filter_module
  modules rds-json-nginx-module-0.14

module rds-json-nginx-module-0.14
  aliases ngx_rds_json
  section 18 353 name
  section 353 859 synopsis
  section 859 1109 description
  section 1109 4480 directives
  section 1131 1267 rds_json
  section 1267 1627 rds_json_buffer_size
  section 1627 2038 rds_json_format
  section 2038 2872 rds_json_root
  section 2872 3099 rds_json_success_property
  section 3099 3538 rds_json_user_property
  section 3538 3722 rds_json_errcode_key
  section 3722 3901 rds_json_errstr_key
  section 3901 4240 rds_json_ret
  section 4240 4480 rds_json_content_type
  section 4480 5678 installation
  section 5678 6374 compatibility
  section 6374 6476 author
  section 6476 7937 copyright & license
  section 7937 8190 see also

dist redis2-nginx-module-0.13
  aliases ngx_redis2 ngx_http_redis2_module
  modules redis2-nginx-module-0.13

module redis2-nginx-module-0.13
  aliases ngx_redis2
  section 18 235 name
  section 235 376 version
  section 376 2181 synopsis
  section 2181 3332 description
  section 3332 8435 directives
  section 3354 4078 redis2_query
  section 4078 4500 redis2_raw_query
  section 4500 5417 redis2_raw_queries
  section 5417 5796 redis2_literal_raw_query
  section 5796 6042 redis2_pass
  section 6042 6519 redis2_connect_timeout
  section 6519 6960 redis2_send_timeout
  section 6960 7404 redis2_read_timeout
  section 7404 7723 redis2_buffer_size
  section 7723 8435 redis2_next_upstream
  section 8435 9123 connection pool
  section 9123 9513 selecting redis databases
  section 9513 14860 lua interoperability
  section 12851 14860 pipelined redis requests by lua
  section 14860 16503 redis publish/subscribe support
  section 15546 16503 limitations for redis publish/subscribe
  section 16503 17310 performance tuning
  section 17310 18864 installation
  section 18864 19749 compatibility
  section 19749 20036 community
  section 19770 19906 english mailing list
  section 19906 20036 chinese mailing list
  section 20036 20303 bugs and patches
  section 20303 20443 source repository
  section 20443 20555 todo
  section 20555 20654 author
  section 20654 20804 getting involved
  section 20804 22297 copyright & license
  section 22297 22915 see also

dist redis-nginx-module-0.3.7
  aliases ngx_redis ngx_http_redis_module

dist resty-cli-0.13
  modules resty-cli-0.13

module resty-cli-0.13
  section 18 1285 name
  section 1285 4205 synopsis
  section 4205 4583 installation
  section 4583 5350 test suite
  section 5350 5553 authors
  section 5553 7137 copyright and license

dist set-misc-nginx-module-0.31
  aliases ngx_set_misc ngx_http_set_misc_module
  modules set-misc-nginx-module-0.31

module set-misc-nginx-module-0.31
  aliases ngx_set_misc
  section 19 384 name
  section 384 3493 synopsis
  section 3493 4159 description
  section 4159 30632 directives
  section 4181 4741 set_if_empty
  section 4741 6398 set_quote_sql_str
  section 6398 6734 set_quote_pgsql_str
  section 6734 8334 set_quote_json_str
  section 8334 10115 set_unescape_uri
  section 10115 10466 set_escape_uri
  section 10466 11859 set_hashed_upstream
  section 11859 13910 set_encode_base32
  section 13910 14381 set_base32_padding
  section 14381 14675 set_misc_base32_padding
  section 14675 15189 set_base32_alphabet
  section 15189 15575 set_decode_base32
  section 15575 17127 set_encode_base64
  section 17127 17508 set_decode_base64
  section 17508 19045 set_encode_hex
  section 19045 19419 set_decode_hex
  section 19419 21123 set_sha1
  section 21123 22850 set_md5
  section 22850 24180 set_hmac_sha1
  section 24180 25144 set_random
  section 25144 25937 set_secure_random_alphanum
  section 25937 26722 set_secure_random_lcalpha
  section 26722 28238 set_rotate
  section 28238 28871 set_local_today
  section 28871 29749 set_formatted_gmt_time
  section 29749 30632 set_formatted_local_time
  section 30632 31133 caveats
  section 31133 32935 installation
  section 32248 32935 building as a dynamic module
  section 32935 33921 compatibility
  section 33921 34432 report bugs
  section 34432 34576 source repository
  section 34576 34743 changes
  section 34743 35534 test suite
  section 35534 35690 getting involved
  section 35690 35896 author
  section 35896 37350 copyright & license
  section 37350 37509 see also

dist srcache-nginx-module-0.31
  aliases ngx_srcache ngx_http_srcache_filter_module
  modules srcache-nginx-module-0.31

module srcache-nginx-module-0.31
  aliases ngx_srcache
  section 18 256 name
  section 256 408 version
  section 408 2269 synopsis
  section 2269 13102 description
  section 3383 4258 subrequest caching
  section 4258 8645 distributed memcached caching
  section 8645 10813 caching with redis
  section 10813 13102 cache key preprocessing
  section 13102 30969 directives
  section 13124 14406 srcache_fetch
  section 14406 16132 srcache_fetch_skip
  section 16132 17948 srcache_store
  section 17948 18608 srcache_store_max_size
  section 18608 19681 srcache_store_skip
  section 19681 20495 srcache_store_statuses
  section 20495 21174 srcache_store_ranges
  section 21174 21847 srcache_header_buffer_size
  section 21847 22761 srcache_store_hide_header
  section 22761 23722 srcache_store_pass_header
  section 23722 24542 srcache_methods
  section 24542 25586 srcache_ignore_content_encoding
  section 25586 26530 srcache_request_cache_control
  section 26530 27486 srcache_response_cache_control
  section 27486 27973 srcache_store_no_store
  section 27973 28460 srcache_store_no_cache
  section 28460 28943 srcache_store_private
  section 28943 30058 srcache_default_expire
  section 30058 30969 srcache_max_expire
  section 30969 33423 variables
  section 30990 32071 $srcache_expire
  section 32071 32663 $srcache_fetch_status
  section 32663 33423 $srcache_store_status
  section 33423 34122 known issues
  section 34122 35661 caveats
  section 35661 36665 trouble shooting
  section 36665 38516 installation
  section 38516 39227 compatibility
  section 39227 39514 community
  section 39248 39384 english mailing list
  section 39384 39514 chinese mailing list
  section 39514 39783 bugs and patches
  section 39783 39926 source repository
  section 39926 41122 test suite
  section 41122 41367 todo
  section 41367 41517 getting involved
  section 41517 41616 author
  section 41616 43080 copyright & license
  section 43080 43409 see also

dist xss-nginx-module-0.05
  aliases ngx_xss ngx_http_xss_filter_module
  modules xss-nginx-module-0.05

module xss-nginx-module-0.05
  aliases ngx_xss
  section 18 579 name
  section 579 887 description
  section 887 2255 directives
  section 909 1081 xss_get
  section 1081 1455 xss_callback_arg
  section 1455 1727 xss_override_status
  section 1727 1961 xss_check_status
  section 1961 2255 xss_input_types
  section 2255 3067 limitations
  section 3067 3184 trouble shooting
  section 3184 4383 installation
  section 4383 5018 compatibility
  section 5018 5090 todo
  section 5090 5172 author
  section 5172 6806 copyright & license
  section 6806 6979 see also

